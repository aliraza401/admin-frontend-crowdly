[{"/media/raza/asd/BCSE/fyp/admin-frontend/src/index.js":"1","/media/raza/asd/BCSE/fyp/admin-frontend/src/reportWebVitals.js":"2","/media/raza/asd/BCSE/fyp/admin-frontend/src/App.js":"3","/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/index.js":"4","/media/raza/asd/BCSE/fyp/admin-frontend/src/path.js":"5","/media/raza/asd/BCSE/fyp/admin-frontend/src/ProctedRoutes.jsx":"6","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewPackage.jsx":"7","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/AddCategory.jsx":"8","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/Dashboard.jsx":"9","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/AddPackage.jsx":"10","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewCategory.jsx":"11","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/AddAdmin.jsx":"12","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/AddLocation.jsx":"13","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/Login.jsx":"14","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewAdmins.jsx":"15","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewCustomers.jsx":"16","/media/raza/asd/BCSE/fyp/admin-frontend/src/components/Sidebar.jsx":"17","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewAdmin.jsx":"18","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewLocation.jsx":"19","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewCustomer.jsx":"20","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewUser.jsx":"21","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewBusiness.jsx":"22","/media/raza/asd/BCSE/fyp/admin-frontend/src/showError.js":"23","/media/raza/asd/BCSE/fyp/admin-frontend/src/components/Footer.jsx":"24","/media/raza/asd/BCSE/fyp/admin-frontend/src/components/Nav.jsx":"25","/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/users.js":"26","/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/modals.js":"27","/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/loading.js":"28","/media/raza/asd/BCSE/fyp/admin-frontend/src/actions/loading.js":"29","/media/raza/asd/BCSE/fyp/admin-frontend/src/actions/users.js":"30","/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/dashboard.js":"31","/media/raza/asd/BCSE/fyp/admin-frontend/src/actions/dashboard.js":"32","/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/categories.js":"33","/media/raza/asd/BCSE/fyp/admin-frontend/src/actions/categories.js":"34","/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/locations.js":"35","/media/raza/asd/BCSE/fyp/admin-frontend/src/actions/locations.js":"36"},{"size":911,"mtime":1618568605026,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1609752968715,"results":"39","hashOfConfig":"38"},{"size":2828,"mtime":1618679548716,"results":"40","hashOfConfig":"38"},{"size":533,"mtime":1618679378720,"results":"41","hashOfConfig":"38"},{"size":223,"mtime":1613819990466,"results":"42","hashOfConfig":"38"},{"size":651,"mtime":1618658803518,"results":"43","hashOfConfig":"38"},{"size":9930,"mtime":1609919138348,"results":"44","hashOfConfig":"38"},{"size":8116,"mtime":1618681367591,"results":"45","hashOfConfig":"38"},{"size":15935,"mtime":1618664113888,"results":"46","hashOfConfig":"38"},{"size":4859,"mtime":1609752968712,"results":"47","hashOfConfig":"38"},{"size":18659,"mtime":1618685591954,"results":"48","hashOfConfig":"38"},{"size":4959,"mtime":1612248954780,"results":"49","hashOfConfig":"38"},{"size":8523,"mtime":1618682404183,"results":"50","hashOfConfig":"38"},{"size":2711,"mtime":1618571040813,"results":"51","hashOfConfig":"38"},{"size":3187,"mtime":1609752968713,"results":"52","hashOfConfig":"38"},{"size":11594,"mtime":1609995842784,"results":"53","hashOfConfig":"38"},{"size":5490,"mtime":1618569136685,"results":"54","hashOfConfig":"38"},{"size":10131,"mtime":1609926859116,"results":"55","hashOfConfig":"38"},{"size":13536,"mtime":1618682434744,"results":"56","hashOfConfig":"38"},{"size":12130,"mtime":1609995937803,"results":"57","hashOfConfig":"38"},{"size":8958,"mtime":1609831970845,"results":"58","hashOfConfig":"38"},{"size":33868,"mtime":1609934371408,"results":"59","hashOfConfig":"38"},{"size":1041,"mtime":1609820600646,"results":"60","hashOfConfig":"38"},{"size":837,"mtime":1613819006047,"results":"61","hashOfConfig":"38"},{"size":2177,"mtime":1618570186873,"results":"62","hashOfConfig":"38"},{"size":601,"mtime":1618567084307,"results":"63","hashOfConfig":"38"},{"size":791,"mtime":1616936185815,"results":"64","hashOfConfig":"38"},{"size":280,"mtime":1616305102943,"results":"65","hashOfConfig":"38"},{"size":181,"mtime":1616305700810,"results":"66","hashOfConfig":"38"},{"size":2637,"mtime":1618567782047,"results":"67","hashOfConfig":"38"},{"size":293,"mtime":1618664069224,"results":"68","hashOfConfig":"38"},{"size":405,"mtime":1618660653335,"results":"69","hashOfConfig":"38"},{"size":294,"mtime":1618679563433,"results":"70","hashOfConfig":"38"},{"size":404,"mtime":1618665517895,"results":"71","hashOfConfig":"38"},{"size":291,"mtime":1618679713547,"results":"72","hashOfConfig":"38"},{"size":394,"mtime":1618681345044,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1stmn0k",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/raza/asd/BCSE/fyp/admin-frontend/src/index.js",[],["162","163"],"/media/raza/asd/BCSE/fyp/admin-frontend/src/reportWebVitals.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/App.js",["164","165","166","167","168","169"],"/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/index.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/path.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/ProctedRoutes.jsx",["170","171","172"],"/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewPackage.jsx",["173","174","175"],"import React from \"react\";\n\nimport Nav from \"./../components/Nav\";\nimport Footer from \"./../components/Footer\";\nimport {Modal} from  \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";  \nimport { heroku_path } from \"./../path\";\n\nimport EditImg from \"./../assets/img/pencil-fill.png\";\nimport closeImg from \"./../assets/img/close-line.png\";\nimport { useToasts } from 'react-toast-notifications';\nimport {Ripple} from \"react-css-spinners\";\n\n\nfunction ViewCustomers() {\n    const token = useSelector( state => state.token );\n    const [ packages, setPackages ] = React.useState([]);\n    const [selectedPackage, setSelectedPackage] = React.useState({name:\"\", price:\"\", description:\"\"});\n    const [smShow, setSmShow] = React.useState(false);\n    const [smShowDelete, setSmShowDelete] = React.useState(false);\n    const { addToast } = useToasts();\n\n    const [laodingList, setloadingList] = React.useState(true);\n    const [laodingpkg, setloadingPkg] = React.useState(false);\n    const [laodingDelete, setloadingDelete] = React.useState(false);\n\n\n\n    React.useEffect( () => {\n        const url = `${heroku_path}api/packages`;\n        const config = { headers: {\"x-auth-token\": token }};\n        axios\n        .get(url, config )\n        .then(res =>  {\n          setloadingList(false);\n            setPackages(res.data)\n        })  \n        .catch( err => {\n          if(err.response.status === 401 && err.response.data === \"unauth\"){\n            addToast('you are not auth to access resource', { appearance: 'info' });\n          }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n            addToast('please provide token', { appearance: 'info' });\n          }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n            addToast('please provide valid token', { appearance: 'info' });\n          }else{\n            addToast('Server Error, Please try Again', { appearance: 'info' });\n          }\n        })\n    },[]);\n\n    const handleEditPackage = e => {\n        e.preventDefault();\n        const url = `${heroku_path}api/packages`;\n        const config = { headers: {\"x-auth-token\": token }};\n        setloadingPkg(true);\n        axios\n        .put(url, {_id: selectedPackage._id, name: selectedPackage.name, price: selectedPackage.price, description: selectedPackage.description }, config )\n        .then(res =>  {\n            setloadingPkg(false);\n            // seSubCCategories(res.data)\n            const temp = packages.map( pkg => {\n                if ( pkg._id === res.data._id ){\n                    return pkg = res.data;\n                }\n                return pkg;\n            });\n            setPackages( temp );\n            setSmShow(false);\n            setSelectedPackage({ name: \"\", price: \"\", description: \"\" });\n            addToast('edit package success', { appearance: 'success' });\n        })  \n        .catch( err => {\n          if(err.response.status === 401 && err.response.data === \"unauth\"){\n            addToast('you are not auth to access resource', { appearance: 'info' });\n          }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n            addToast('please provide token', { appearance: 'info' });\n          }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n            addToast('please provide valid token', { appearance: 'info' });\n          }else{\n            addToast('Server Error, Please try Again', { appearance: 'info' });\n          }\n        })\n    }\n\n    const handleDeletePackage = e => {\n        e.preventDefault();\n        console.log(\"here\")\n        const url = `${heroku_path}api/packages/${ selectedPackage._id }`;\n        const config = { headers: {\"x-auth-token\": token }};\n        setloadingDelete(true);\n        axios\n        .delete(url , config )\n        .then(res =>  {\n            console.log(\"also here\")\n            if( res.data.deletedCount == 1 ){\n                const temp = packages.filter( pkg => pkg._id != selectedPackage._id );\n                console.log(temp);\n                addToast('delete pkg Successfully', { appearance: 'info' });\n                setPackages( temp );\n                setloadingDelete(false)\n                setSmShowDelete(false);\n            }\n        })  \n        .catch( err => {\n          if(err.response.status === 401 && err.response.data === \"unauth\"){\n            addToast('you are not auth to access resource', { appearance: 'info' });\n          }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n            addToast('please provide token', { appearance: 'info' });\n          }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n            addToast('please provide valid token', { appearance: 'info' });\n          }else{\n            addToast('Server Error, Please try Again', { appearance: 'info' });\n          }\n        })\n    }\n\n\n  return (\n    <div className=\"ViewPackage\">\n        <div class=\"\">\n        <div class=\"main-panel\">\n\n        <Nav />\n      \n      <div class=\"content\">\n        <div class=\"container-fluid\">\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title \">Packages Table</h4>\n                  <p class=\"card-category\"> Here is table of all packages in system</p>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"table-responsive\">\n                    <table class=\"table\">\n                      <thead class=\" text-primary\">\n                        <th> No. </th>\n                        <th> Name </th>\n                        <th> Price </th>\n                        <th> Description </th>\n                        <th> EDIT </th>\n                        <th> DELETE </th>\n                      </thead>\n                      <tbody>\n                        {\n                          laodingList ?\n                           <tr className=\"text-center\"><Ripple color=\"#8553aa\" size={30} /></tr> :\n                          packages.map( (e, index) => \n                          <>\n                              <tr>\n                                  <td> {index+1} </td>\n                                  <td> {e.name} </td>\n                                  <td> {e.price} </td>\n                                  <td> {e.description} </td>\n                                  <td onClick={() => { setSelectedPackage(e); setSmShow(true) }} > <img className=\"cursor-pointer\" src={EditImg} alt=\"\"/>  </td>\n                                  <td onClick={() => { setSelectedPackage(e); setSmShowDelete(true) }} > <img className=\"cursor-pointer\" src={closeImg} alt=\"\"/> </td>\n                              </tr> \n                          </>\n                          )\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n\n        </div>\n      </div>\n\n        <Footer />\n\n    </div>\n\n        </div>\n\n        <Modal\n            size=\"sm\"\n            show={smShow}\n            onHide={() => setSmShow(false)}\n            aria-labelledby=\"example-modal-sizes-title-sm\"\n        >\n            <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\n                Edit Package\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleEditPackage} >\n                    <input type=\"text\" required class=\"form-control mb-3\"  value={selectedPackage.name} onChange={ e => setSelectedPackage({ ...selectedPackage, name: e.target.value }) } />\n                    <input type=\"text\" required class=\"form-control mb-3\"  value={selectedPackage.price} onChange={ e => setSelectedPackage({ ...selectedPackage, price: e.target.value }) }  />\n                    <textarea required class=\"form-control mb-3\"  value={selectedPackage.description} onChange={ e => setSelectedPackage({ ...selectedPackage, description: e.target.value }) }  /> \n                    {\n                      laodingpkg ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button \n                        type=\"subimt\" \n                        disabled={ selectedPackage.name.length < 1 || selectedPackage.price.length < 1 || selectedPackage.description.length < 1  }  \n                        className=\"btn btn-primary btn-block\" \n                      > \n                        Edit \n                      </button>\n                    }\n                </form>\n            </Modal.Body>\n        </Modal>\n\n        <Modal\n            size=\"sm\"\n            show={smShowDelete}\n            onHide={() => setSmShowDelete(false)}\n            aria-labelledby=\"example-modal-sizes-title-sm\"\n        >\n            <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\n                Delte Package\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleDeletePackage} >\n                    {/* <p>{selectedCategory.name}</p> */}\n                    <p> Are you sure you want to delete <span className=\"font-weight-bold\"> { selectedPackage.name } </span> ? </p>\n                    {\n                      laodingDelete ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button type=\"subimt\"  className=\"btn btn-primary btn-block\" > Delete </button>\n                    }\n                </form>\n            </Modal.Body>\n        </Modal>\n\n    </div>\n  );\n}\n\nexport default ViewCustomers;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/AddCategory.jsx",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/Dashboard.jsx",["176","177","178","179","180","181","182","183"],"import React from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\n\nimport Nav from \"./../components/Nav\";\nimport Footer from \"./../components/Footer\";\nimport axios from \"axios\";\nimport { heroku_path } from \"./../path\";\nimport { useToasts } from 'react-toast-notifications';\n// import { Ripple } from \"react-css-spinner\";\nimport { Ripple } from 'react-css-spinners';\n\nimport { setDashboard } from \"./../actions/dashboard\";\n\nfunction Dashboard() {\n  const dispatch = useDispatch();\n  const usersCountList = useSelector( state => state.dashboard.usersCount )\n  \n  React.useEffect(() => {\n    dispatch(setDashboard());\n  },[])\n\n  const printRole = admin => {\n    if( admin.role === 3){\n      return \"SuperUser\";\n    }else if( admin.role === 2 ){\n      return \"Admin\"\n    }else if( admin.role === 1){ \n      return \"Content Creator\"\n    }\n  }\n\n  return (\n    <div className=\"dashboard\">\n  <div class=\"main-panel\">\n      \n      <Nav />\n      \n      <div class=\"content\">\n        <div class=\"container-fluid\">\n\n\n          <div class=\"row\">\n            <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                <div class=\"card-header card-header-warning card-header-icon\">\n                  <div class=\"card-icon\">\n                    <i class=\"material-icons\">content_copy</i>\n                  </div>\n                  <p class=\"card-category\">Total Workers</p>\n                  <h3 class=\"card-title\">\n                    { usersCountList && usersCountList.workers }\n                  </h3>\n                </div>\n                <div class=\"card-footer\">\n                  <div class=\"stats\">\n                  <i class=\"material-icons\">date_range</i>\n                    <a href=\"javascript:;\">this is total users count</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                <div class=\"card-header card-header-success card-header-icon\">\n                  <div class=\"card-icon\">\n                    <i class=\"material-icons\">store</i>\n                  </div>\n                  <p class=\"card-category\" style={{fontSize:12}}>Total categories</p>\n                  <h3 class=\"card-title\">                     { usersCountList && usersCountList.categories } </h3>\n                </div>\n                <div class=\"card-footer\">\n                  <div class=\"stats\" style={{fontSize:12}}>\n                    <i class=\"material-icons\">date_range</i> this is total categories count\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                <div class=\"card-header card-header-danger card-header-icon\">\n                  <div class=\"card-icon\">\n                    <i class=\"material-icons\">info_outline</i>\n                  </div>\n                  <p class=\"card-category\">Total Admins</p>\n                  <h3 class=\"card-title\"> \n                  {/* {productsCount}  */}\n                        { usersCountList && usersCountList.admins }\n                  </h3>\n                </div>\n                <div class=\"card-footer\">\n                  <div class=\"stats\">\n                    <i class=\"material-icons\">local_offer</i> this is total admins count\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-lg-3 col-md-6 col-sm-6\">\n              <div class=\"card card-stats\">\n                <div class=\"card-header card-header-info card-header-icon\">\n                  <div class=\"card-icon\">\n                    <i class=\"fa fa-twitter\"></i>\n                  </div>\n                  <p class=\"card-category\">User Requests</p>\n                  <h3 class=\"card-title\"> \n                    {/* {servicesCount}  */}\n                      { usersCountList && usersCountList.userRequests }\n                    </h3>\n                </div>\n                <div class=\"card-footer\">\n                  <div class=\"stats\">\n                    <i class=\"material-icons\">update</i> this is total User Requests\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-lg-5 col-md-12\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-tabs card-header-primary\">\n                  <div class=\"nav-tabs-navigation\">\n                    <div class=\"nav-tabs-wrapper\">\n                      <span class=\"nav-tabs-title\">Tasks:</span>\n                      <ul class=\"nav nav-tabs\" data-tabs=\"tabs\">\n                        <li class=\"nav-item\">\n                          <a class=\"nav-link active\" href=\"#profile\" data-toggle=\"tab\">\n                            <i class=\"material-icons\">bug_report</i> Bugs\n                            <div class=\"ripple-container\"></div>\n                          </a>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"tab-content\">\n                    <div class=\"tab-pane active\" id=\"profile\">\n                      <table class=\"table\">\n                        <tbody>\n                          <tr>\n                            <td>\n                              <div class=\"form-check\">\n                                <label class=\"form-check-label\">\n                                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked />\n                                  <span class=\"form-check-sign\">\n                                    <span class=\"check\"></span>\n                                  </span>\n                                </label>\n                              </div>\n                            </td>\n                            <td>Sign contract for \"What are conference organizers afraid of?\"</td>\n                            <td class=\"td-actions text-right\">\n                              <button type=\"button\" rel=\"tooltip\" title=\"Edit Task\" class=\"btn btn-primary btn-link btn-sm\">\n                                <i class=\"material-icons\">edit</i>\n                              </button>\n                              <button type=\"button\" rel=\"tooltip\" title=\"Remove\" class=\"btn btn-danger btn-link btn-sm\">\n                                <i class=\"material-icons\">close</i>\n                              </button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <div class=\"form-check\">\n                                <label class=\"form-check-label\">\n                                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" />\n                                  <span class=\"form-check-sign\">\n                                    <span class=\"check\"></span>\n                                  </span>\n                                </label>\n                              </div>\n                            </td>\n                            <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\n                            <td class=\"td-actions text-right\">\n                              <button type=\"button\" rel=\"tooltip\" title=\"Edit Task\" class=\"btn btn-primary btn-link btn-sm\">\n                                <i class=\"material-icons\">edit</i>\n                              </button>\n                              <button type=\"button\" rel=\"tooltip\" title=\"Remove\" class=\"btn btn-danger btn-link btn-sm\">\n                                <i class=\"material-icons\">close</i>\n                              </button>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                    <div class=\"tab-pane\" id=\"messages\">\n                      <table class=\"table\">\n                        <tbody>\n                          <tr>\n                            <td>\n                              <div class=\"form-check\">\n                                <label class=\"form-check-label\">\n                                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked />\n                                  <span class=\"form-check-sign\">\n                                    <span class=\"check\"></span>\n                                  </span>\n                                </label>\n                              </div>\n                            </td>\n                            <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\n                            </td>\n                            <td class=\"td-actions text-right\">\n                              <button type=\"button\" rel=\"tooltip\" title=\"Edit Task\" class=\"btn btn-primary btn-link btn-sm\">\n                                <i class=\"material-icons\">edit</i>\n                              </button>\n                              <button type=\"button\" rel=\"tooltip\" title=\"Remove\" class=\"btn btn-danger btn-link btn-sm\">\n                                <i class=\"material-icons\">close</i>\n                              </button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <div class=\"form-check\">\n                                <label class=\"form-check-label\">\n                                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" />\n                                  <span class=\"form-check-sign\">\n                                    <span class=\"check\"></span>\n                                  </span>\n                                </label>\n                              </div>\n                            </td>\n                            <td>Sign contract for \"What are conference organizers afraid of?\"</td>\n                            <td class=\"td-actions text-right\">\n                              <button type=\"button\" rel=\"tooltip\" title=\"Edit Task\" class=\"btn btn-primary btn-link btn-sm\">\n                                <i class=\"material-icons\">edit</i>\n                              </button>\n                              <button type=\"button\" rel=\"tooltip\" title=\"Remove\" class=\"btn btn-danger btn-link btn-sm\">\n                                <i class=\"material-icons\">close</i>\n                              </button>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                    <div class=\"tab-pane\" id=\"settings\">\n                      <table class=\"table\">\n                        <tbody>\n                          <tr>\n                            <td>\n                              <div class=\"form-check\">\n                                <label class=\"form-check-label\">\n                                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" />\n                                  <span class=\"form-check-sign\">\n                                    <span class=\"check\"></span>\n                                  </span>\n                                </label>\n                              </div>\n                            </td>\n                            <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\n                            <td class=\"td-actions text-right\">\n                              <button type=\"button\" rel=\"tooltip\" title=\"Edit Task\" class=\"btn btn-primary btn-link btn-sm\">\n                                <i class=\"material-icons\">edit</i>\n                              </button>\n                              <button type=\"button\" rel=\"tooltip\" title=\"Remove\" class=\"btn btn-danger btn-link btn-sm\">\n                                <i class=\"material-icons\">close</i>\n                              </button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <div class=\"form-check\">\n                                <label class=\"form-check-label\">\n                                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked />\n                                  <span class=\"form-check-sign\">\n                                    <span class=\"check\"></span>\n                                  </span>\n                                </label>\n                              </div>\n                            </td>\n                            <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\n                            </td>\n                            <td class=\"td-actions text-right\">\n                              <button type=\"button\" rel=\"tooltip\" title=\"Edit Task\" class=\"btn btn-primary btn-link btn-sm\">\n                                <i class=\"material-icons\">edit</i>\n                              </button>\n                              <button type=\"button\" rel=\"tooltip\" title=\"Remove\" class=\"btn btn-danger btn-link btn-sm\">\n                                <i class=\"material-icons\">close</i>\n                              </button>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <div class=\"form-check\">\n                                <label class=\"form-check-label\">\n                                  <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked />\n                                  <span class=\"form-check-sign\">\n                                    <span class=\"check\"></span>\n                                  </span>\n                                </label>\n                              </div>\n                            </td>\n                            <td>Sign contract for \"What are conference organizers afraid of?\"</td>\n                            <td class=\"td-actions text-right\">\n                              <button type=\"button\" rel=\"tooltip\" title=\"Edit Task\" class=\"btn btn-primary btn-link btn-sm\">\n                                <i class=\"material-icons\">edit</i>\n                              </button>\n                              <button type=\"button\" rel=\"tooltip\" title=\"Remove\" class=\"btn btn-danger btn-link btn-sm\">\n                                <i class=\"material-icons\">close</i>\n                              </button>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-lg-7 col-md-12\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-warning\">\n                  <h4 class=\"card-title\">Admin Stats</h4>\n                  <p class=\"card-category\">New employees on 15th September, 2016</p>\n                </div>\n                <div class=\"card-body table-responsive\">\n                  <table class=\"table table-hover\">\n                    <thead class=\"text-warning\">\n                      <th>ID</th>\n                      <th>Name</th>\n                      <th>Email</th>\n                      <th>Role</th>\n                      <th>Created At</th>\n                    </thead>\n                    <tbody>\n\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n\n      <Footer />\n\n    </div>\n\n\n\n\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/AddPackage.jsx",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewCategory.jsx",["184","185","186","187"],"/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/AddAdmin.jsx",["188"],"import React from \"react\";\n\nimport Nav from \"./../components/Nav\";\nimport Footer from \"./../components/Footer\";\nimport { useSelector } from \"react-redux\";\nimport { heroku_path } from \"./../path\";\nimport { useToasts } from 'react-toast-notifications';\nimport { Ripple } from \"react-css-spinners\";\n\n \nimport axios from \"axios\";\n\n\nfunction AddCategory() {\n    const { addToast } = useToasts();\n    const [ formAdmin, setFormAdmin ] = React.useState({});\n    \n    const [ loadingAdmin, setloadingAdmin ] = React.useState(false);\n    \n    const token = useSelector( state => state.token );\n\n    const handleAdminSubmmit = e => {\n        e.preventDefault();\n        const url = `${heroku_path}api/admin`;\n        const config = { headers: {\"x-auth-token\": token } };\n        axios\n          .post(url, formAdmin , config )\n          .then(res => {\n              if(res.status >= 200 && res.status < 300 ){\n                // teast admin created success\n                setFormAdmin({name:\"\",email:\"\",password:\"\",role:\"\"});\n                addToast('admin add success', { appearance: 'success' });\n              }\n          })  \n          .catch( err => {\n            if(err.response.status === 401 && err.response.data === \"unauth\"){\n              addToast('you are not auth to access resource', { appearance: 'info' });\n            }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n              addToast('please provide token', { appearance: 'info' });\n            }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n              addToast('please provide valid token', { appearance: 'info' });\n            }else{\n              addToast('Server Error, Please try Again', { appearance: 'info' });\n            }\n          })\n    };\n\n\n  return (\n    <div className=\"AddCategory\">\n        <div class=\"\">\n        <div class=\"main-panel\">\n        \n        <Nav />\n\n      <div class=\"content\">\n        <div class=\"container-fluid\">\n\n          <div class=\"row\">\n            <div class=\"col-md-8\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title\">Add Admin</h4>\n                  <p class=\"card-category\">Here you can add business categories</p>\n                </div>\n                <div class=\"card-body\">\n                  <form onSubmit={handleAdminSubmmit} >\n                    <div class=\"row\">\n                      <div class=\"col-md-12\">\n                        <div class=\"form-group\">\n                          <input type=\"text\" required class=\"form-control mb-3\" placeholder=\"Name\" value={formAdmin.name} onChange={ e => setFormAdmin({...formAdmin, name: e.target.value}) } />\n                          <input type=\"text\" required class=\"form-control mb-3\" placeholder=\"Email\" value={formAdmin.email} onChange={ e => setFormAdmin({...formAdmin, email: e.target.value}) } />\n                          <input type=\"text\" required class=\"form-control mb-3\" placeholder=\"Password\" value={formAdmin.password} onChange={ e => setFormAdmin({...formAdmin, password: e.target.value}) } />\n                          <select name=\"city\" value={formAdmin.role} required  onChange={ e => setFormAdmin({...formAdmin, role: e.target.value}) }  class=\"custom-select mb-3\" id=\"validationCustom04\" style={{border: `1px solid #1668a8` }}>\n                              <option > Select Role </option>\n                              <option value=\"1\"  > Content Editor </option>\n                              <option value=\"2\"  > Admin </option>\n                              <option value=\"3\"  > Super Admin </option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                    {\n                      loadingAdmin ? \n                      <div style={{height:50}} class=\" pull-right\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button type=\"submit\" class=\"btn btn-primary pull-right\">Add Admin</button>\n                    }\n                    <div class=\"clearfix\"></div>\n                  </form>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"card card-profile\">\n                <div class=\"card-avatar\">\n                </div>\n                <div class=\"card-body\">\n                  <p class=\"card-description mt-5\">\n                      Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis, temporibus.\n                      Lorem ipsum dolor sit amet consectetur adipisicing elit. Enim, aut?\n                  </p>\n                  {/* <a class=\"btn btn-primary text-white btn-round\">Follow</a> */}\n                </div>\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <Footer />\n    \n    </div>\n\n        </div>\n    </div>\n  );\n}\n\nexport default AddCategory;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/AddLocation.jsx",["189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/Login.jsx",["203","204","205","206","207","208","209","210","211"],"import React from \"react\";\nimport SidebarImg from \"./../assets/img/sidebar-1.jpg\"\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport logoImg from \"./../assets/img/logo.png\";\nimport { heroku_path } from \"./../path\";\nimport { useToasts } from 'react-toast-notifications';\nimport {Ripple} from \"react-css-spinners\";\n\nimport { setLoading } from \"../actions/loading\";\nimport { customLogin } from \"../actions/users\";\n\nfunction Login(props) {\n    const { addToast } = useToasts();\n    const [ formdata, setFormData ] = React.useState({});\n    const [ loading, setloading ] = React.useState(false);\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector( state => state.isLoggedIn );\n\n    React.useEffect( () => {\n        // if( !isLoggedIn ){ props.history.push('/') }\n    },[])\n\n  const handleCustomLogin = e => { \n    e.preventDefault(); \n    dispatch(setLoading(true));\n    dispatch(customLogin( formdata ))\n    .then( res => {\n      if(res.error){\n          addToast( res.error.data.message , { appearance: 'info' });\n          console.log(res.error);\n      }else{\n        addToast('Login Success', { appearance: 'success' });\n        setFormData({});\n        props.history.push(\"/\")\n      }\n    });\n    dispatch(setLoading(false));\n  }\n \n\n  return (\n    <div className=\"text-center login\">\n\n    <form class=\"form-signin\" onSubmit={handleCustomLogin} >\n        <img class=\" \" src={logoImg} alt=\"\" className=\"img img-fluid\" style={{width:260}}  />\n        <h4 class=\"h4 my-4 font-weight-normal\"></h4>\n        <label for=\"inputEmail\"  class=\"sr-only\">Email address</label>\n        <input type=\"email\" required id=\"inputEmail\" class=\"form-control mb-3\" placeholder=\"Email address\" value={formdata.email} onChange={e => setFormData({ ...formdata, email: e.target.value })} required autofocus />\n        <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n        <input type=\"password\" required id=\"inputPassword\" class=\"form-control mb-4\" placeholder=\"Password\"  value={formdata.password} onChange={e => setFormData({ ...formdata, password: e.target.value })}  required />\n        <div class=\"checkbox mb-3\">\n            {/* <label>\n            <input type=\"checkbox\" value=\"remember-me\" /> \n             Remember me\n            </label> */}\n        </div>\n        {\n            loading ? \n            <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={50} /></div>:\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\n        }\n        <p class=\"mt-5 mb-3 text-muted\">&copy; 2020-2024</p>\n    </form>\n\n    </div>\n  );\n}\n\nexport default Login;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewAdmins.jsx",["212","213"],"import React from \"react\";\nimport Nav from \"../components/Nav\";\nimport Footer from \"../components/Footer\";\nimport {Modal} from  \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport EditImg from \"./../assets/img/pencil-fill.png\";\nimport { heroku_path } from \"./../path\";\nimport {Ripple} from \"react-css-spinners\";\n\n\n\nfunction ViewAdmins() {\n  const [ admins, setAdmins ] = React.useState([]);\n  const token = useSelector( state => state.token );\n  const [laodingList, setloadingList] = React.useState(true);\n\n\n  React.useEffect( () => {\n      const url = `${heroku_path}api/admin/admins`;\n      const config = { headers: {\"x-auth-token\": token }};\n      axios\n      .get(url, config)\n      .then(res =>  {\n          console.log(res.data);\n          setAdmins(res.data)\n          setloadingList(false);\n\n      })  \n      .catch(err => console.log(err))\n  },[]);\n\n  const printRole = admin => {\n    if( admin.role === 3){\n      return \"SuperAdmin\";\n    }else if( admin.role === 2 ){\n      return \"Admin\"\n    }else if( admin.role === 1){\n      return \"Content Creator\"\n    }\n  }\n\n\n  return (\n    <div className=\"ViewLocation\">\n        <div class=\"\">\n        <div class=\"main-panel\">\n\n        <Nav />\n      \n      <div class=\"content\">\n        <div class=\"container-fluid\">\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title \">Admin Table</h4>\n                  <p class=\"card-category\"> Here is table of all cities and area in system</p>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"table-responsive\">\n                    <table class=\"table\">\n                      <thead class=\" text-primary\">\n                        <th> No. </th>\n                        <th> Name </th>\n                        <th> Email </th>\n                        <th> Role </th>\n                        <th> EDIT </th>\n                      </thead>\n                      <tbody>\n                        {\n                            laodingList ?\n                            <Ripple color=\"#8553aa\" size={30} />:\n                            admins.map( (e, index) => \n                            <>\n                                <tr>\n                                    <td> {index+1} </td>\n                                    <td> {e.name} </td>\n                                    <td> {e.email} </td>\n                                    <td> { printRole(e) } </td>\n                                    <Link to={`/view-admin/${e._id}`}> <td> <img className=\"cursor-pointer\" src={EditImg} alt=\"\"/>  </td> </Link>\n                                </tr> \n                            </>\n                            )\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n\n        </div>\n      </div>\n\n        <Footer />\n\n    </div>\n\n        </div>\n\n    </div>\n  );\n}\n\nexport default ViewAdmins;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewCustomers.jsx",["214","215","216","217","218","219","220","221"],"import React from \"react\";\n\nimport Nav from \"./../components/Nav\";\nimport Footer from \"./../components/Footer\";\nimport {Modal} from  \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { heroku_path } from \"./../path\";\nimport userImg from \"./../assets/img/user_img.png\";\nimport ShowError from \"./../showError\";\nimport EditImg from \"./../assets/img/pencil-fill.png\";\nimport closeImg from \"./../assets/img/close-line.png\";\nimport { useToasts } from 'react-toast-notifications';\nimport {Ripple} from \"react-css-spinners\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction ViewPackage() {\n    const token = useSelector( state => state.token );\n    const [ users, setUsers ] = React.useState([]);\n    const [ businessUsers, setBusinessUsers ] = React.useState([]);\n    const { addToast } = useToasts();\n\n    const [ loadingUsers, setLoadingUsers ] = React.useState(true);\n    const [ loadingBusers, setLoadingBUsers ] = React.useState(true);\n\n\n\n    React.useEffect( () => {\n        const url = `${heroku_path}api/users/business_users`;\n        const config = { headers: {\"x-auth-token\": token }};\n        axios\n        .get(url, config )\n        .then(res =>  {\n          setBusinessUsers(res.data);\n          setLoadingBUsers(false)\n        })  \n        .catch( err => {\n            const result = ShowError(err)\n            addToast( result.msg + result.status , { appearance: 'info' });\n        });\n\n        axios\n        .get( `${heroku_path}api/users/users` , config )\n        .then(res =>  {\n          setUsers(res.data)\n          setLoadingUsers(false)\n        })  \n        .catch( err => {\n          const result = ShowError(err)\n          addToast( result.msg + result.status , { appearance: 'info' });\n        });\n\n    },[]);\n\n    // const handleEditPackage = e => {\n    //     e.preventDefault();\n    //     const url = `${heroku_path}api/packages`;\n    //     const config = { headers: {\"x-auth-token\": token }};\n    //     setloadingPkg(true);\n    //     axios\n    //     .put(url, {_id: selectedPackage._id, name: selectedPackage.name, price: selectedPackage.price, description: selectedPackage.description }, config )\n    //     .then(res =>  {\n    //         setloadingPkg(false);\n    //         // seSubCCategories(res.data)\n    //         const temp = packages.map( pkg => {\n    //             if ( pkg._id === res.data._id ){\n    //                 return pkg = res.data;\n    //             }\n    //             return pkg;\n    //         });\n    //         setPackages( temp );\n    //         setSmShow(false);\n    //         setSelectedPackage({ name: \"\", price: \"\", description: \"\" });\n    //         addToast('edit package success', { appearance: 'success' });\n    //     })  \n    //     .catch( err => {\n    //       if(err.response.status === 401 && err.response.data === \"unauth\"){\n    //         addToast('you are not auth to access resource', { appearance: 'info' });\n    //       }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n    //         addToast('please provide token', { appearance: 'info' });\n    //       }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n    //         addToast('please provide valid token', { appearance: 'info' });\n    //       }else{\n    //         addToast('Server Error, Please try Again', { appearance: 'info' });\n    //       }\n    //     })\n    // }\n\n    // const handleDeletePackage = e => {\n    //     e.preventDefault();\n    //     console.log(\"here\")\n    //     const url = `${heroku_path}api/packages/${ selectedPackage._id }`;\n    //     const config = { headers: {\"x-auth-token\": token }};\n    //     setloadingDelete(true);\n    //     axios\n    //     .delete(url , config )\n    //     .then(res =>  {\n    //         console.log(\"also here\")\n    //         if( res.data.deletedCount == 1 ){\n    //             const temp = packages.filter( pkg => pkg._id != selectedPackage._id );\n    //             console.log(temp);\n    //             addToast('delete pkg Successfully', { appearance: 'info' });\n    //             setPackages( temp );\n    //             setloadingDelete(false)\n    //             setSmShowDelete(false);\n    //         }\n    //     })  \n    //     .catch( err => {\n    //       if(err.response.status === 401 && err.response.data === \"unauth\"){\n    //         addToast('you are not auth to access resource', { appearance: 'info' });\n    //       }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n    //         addToast('please provide token', { appearance: 'info' });\n    //       }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n    //         addToast('please provide valid token', { appearance: 'info' });\n    //       }else{\n    //         addToast('Server Error, Please try Again', { appearance: 'info' });\n    //       }\n    //     })\n    // }\n\n\n  return (\n    <div className=\"ViewCustomers\">\n        <div class=\"\">\n        <div class=\"main-panel\">\n\n        <Nav />\n      \n      <div class=\"content\">\n        <div class=\"container-fluid\">\n\n        <div class=\"row\" style={{ maxHeight:500, overflowY: 'scroll' }}>\n            <div class=\"col-md-12\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title \">Users </h4>\n                  <p class=\"card-category\"> Here is table of all users in system</p>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"table-responsive\">\n                    <table class=\"table\">\n                      <thead class=\" text-primary\">\n                        <th> No. </th>\n                        <th> Picture </th>\n                        <th> Name </th>\n                        <th> Email </th>\n                        <th> View Details </th>\n                      </thead>\n                      <tbody>\n                        {\n                          //  <tr className=\"text-center\"><Ripple color=\"#8553aa\" size={30} /></tr> \n                          users.map( (e, index) => \n                          <>\n                            <tr>\n                                <td> {index+1} </td>\n                                <td> <img src={ e.imageUrl ? e.imageUrl : userImg } className=\"img img-fluid rounded-circle\" style={{ width: 50, height: 50 }} ></img> </td>\n                                <td> {e.name} </td>\n                                <td> {e.email} </td>\n                                <Link to={`/view-user/${e._id}`}> <td> <img className=\"cursor-pointer\" src={EditImg} alt=\"\"/>  </td> </Link>\n                            </tr> \n                          </>\n                          )\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row mt-5\" style={{ maxHeight:500, overflowY: 'scroll' }} >\n            <div class=\"col-md-12\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title \">Business Customers </h4>\n                  <p class=\"card-category\"> Here is table of all customers in system</p>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"table-responsive\">\n                    <table class=\"table\">\n                      <thead class=\" text-primary\">\n                        <th> No. </th>\n                        <th> Name </th>\n                        <th> Email </th>\n                        <th> EDIT </th>\n                        <th> View Details </th>\n                      </thead>\n                      <tbody>\n                        {\n                          //  <tr className=\"text-center\"><Ripple color=\"#8553aa\" size={30} /></tr> \n                          businessUsers.map( (e, index) => \n                          <>\n                            <tr>\n                                <td> {index+1} </td>\n                                <td> <img src={e.imageUrl ? e.imageUrl : userImg} className=\"img img-fluid  rounded-circle\" style={{ width: 50, height: 50 }} ></img> </td>\n                                <td> {e.name} </td>\n                                <td> {e.email} </td>\n                                <Link to={`/view-customer/${e._id}`}> <td> <img className=\"cursor-pointer\" src={EditImg} alt=\"\"/>  </td> </Link>\n                            </tr> \n                          </>\n                          )\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n\n        <Footer />\n\n    </div>\n\n        </div>\n\n        {/* <Modal\n            size=\"sm\"\n            show={smShow}\n            onHide={() => setSmShow(false)}\n            aria-labelledby=\"example-modal-sizes-title-sm\"\n        >\n            <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\n                Edit Package\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleEditPackage} >\n                    <input type=\"text\" required class=\"form-control mb-3\"  value={selectedPackage.name} onChange={ e => setSelectedPackage({ ...selectedPackage, name: e.target.value }) } />\n                    <input type=\"text\" required class=\"form-control mb-3\"  value={selectedPackage.price} onChange={ e => setSelectedPackage({ ...selectedPackage, price: e.target.value }) }  />\n                    <textarea required class=\"form-control mb-3\"  value={selectedPackage.description} onChange={ e => setSelectedPackage({ ...selectedPackage, description: e.target.value }) }  /> \n                    {\n                      laodingpkg ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button \n                        type=\"subimt\" \n                        disabled={ selectedPackage.name.length < 1 || selectedPackage.price.length < 1 || selectedPackage.description.length < 1  }  \n                        className=\"btn btn-primary btn-block\" \n                      > \n                        Edit \n                      </button>\n                    }\n                </form>\n            </Modal.Body>\n        </Modal>\n\n        <Modal\n            size=\"sm\"\n            show={smShowDelete}\n            onHide={() => setSmShowDelete(false)}\n            aria-labelledby=\"example-modal-sizes-title-sm\"\n        >\n            <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\n                Delte Package\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleDeletePackage} >\n                    <p>{selectedCategory.name}</p>\n                    <p> Are you sure you want to delete <span className=\"font-weight-bold\"> { selectedPackage.name } </span> ? </p>\n                    {\n                      laodingDelete ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button type=\"subimt\"  className=\"btn btn-primary btn-block\" > Delete </button>\n                    }\n                </form>\n            </Modal.Body>\n        </Modal> */}\n\n    </div>\n  );\n}\n\nexport default ViewPackage;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/components/Sidebar.jsx",["222","223"],"import React from \"react\";\nimport { Navigation } from \"react-minimal-side-navigation\";\n// import 'react-minimal-side-navigation/lib/ReactMinimalSideNavigation.css';\nimport { useHistory, Switch, Route, Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport SidebarImg from \"./../assets/img/sidebar-1.jpg\";\n\nfunction Sidebar() {\n  const history = useHistory();\n  const name = useSelector(state => state.user.user.name);\n\n\n  return (\n    <div className=\"sidebar\">\n\n    <div class=\"sidebar\" data-color=\"purple\" data-background-color=\"white\" data-image={SidebarImg} >\n      <div className=\"logo\"  ><Link to=\"/dashboard\" className=\"simple-text text-white logo-normal\">\n          {name}\n        </Link></div>\n      {/* <div class=\"sidebar-wrapper\">\n        <ul class=\"nav\">\n          <li class=\"nav-item active  \">\n            <a class=\"nav-link\" href=\"./dashboard.html\">\n              <i class=\"material-icons\">dashboard</i>\n              <p>Dashboard</p>\n            </a>\n          </li>\n          <li class=\"nav-item \">\n            <a class=\"nav-link\" href=\"./user.html\">\n              <i class=\"material-icons\">person</i>\n              <p>User Profile</p>\n            </a>\n          </li>\n          <li class=\"nav-item \">\n            <a class=\"nav-link\" href=\"./tables.html\">\n              <i class=\"material-icons\">content_paste</i>\n              <p>Table List</p>\n            </a>\n          </li>\n          <li class=\"nav-item \">\n            <a class=\"nav-link\" href=\"./typography.html\">\n              <i class=\"material-icons\">library_books</i>\n              <p>Typography</p>\n            </a>\n          </li>\n          <li class=\"nav-item \">\n            <a class=\"nav-link\" href=\"./icons.html\">\n              <i class=\"material-icons\">bubble_chart</i>\n              <p>Icons</p>\n            </a>\n          </li>\n          <li class=\"nav-item \">\n            <a class=\"nav-link\" href=\"./map.html\">\n              <i class=\"material-icons\">location_ons</i>\n              <p>Maps</p>\n            </a>\n          </li>\n          <li class=\"nav-item \">\n            <a class=\"nav-link\" href=\"./notifications.html\">\n              <i class=\"material-icons\">notifications</i>\n              <p>Notifications</p>\n            </a>\n          </li>\n          <li class=\"nav-item \">\n            <a class=\"nav-link\" href=\"./rtl.html\">\n              <i class=\"material-icons\">language</i>\n              <p>RTL Support</p>\n            </a>\n          </li>\n          <li class=\"nav-item active-pro \">\n            <a class=\"nav-link\" href=\"./upgrade.html\">\n              <i class=\"material-icons\">unarchive</i>\n              <p>Upgrade to PRO</p>\n            </a>\n          </li>\n        </ul> */}\n            \n            <div className=\"sidebar-wrapper\">\n            <Navigation\n                className=\"nav\"\n                // you can use your own router's api to get pathname\n                activeItemId=\"/management\"\n                onSelect={({ itemId }) => {\n                    // maybe push to the route\n                      history.push(itemId);\n                }}\n                items={[\n                  {\n                      title: `Dashboard`,\n                      itemId: \"/\",\n                      elemBefore: () => <i class=\"material-icons pl-2\">dashboard</i>,\n                  },                  \n                  {\n                    title: \" Categories\",\n                    itemId: \"/categories\",\n                    elemBefore: () => <i class=\"material-icons pl-2\">library_books</i>,\n                    subNav: [\n                      {\n                        title: \"Add Categories\",\n                        itemId: \"/add-category\",\n                      },\n                      {\n                        title: \"View Categories\",\n                        itemId: \"/view-category\",\n                      },\n                    ],\n                  },\n                  {\n                    title: \"Location\",\n                    itemId: \"/location\",\n                    elemBefore: () => <i class=\"material-icons pl-2\">library_books</i>,\n                    subNav: [\n                      {\n                        title: \"Add Location\",\n                        itemId: \"/add-location\",\n                      },\n                      {\n                        title: \"View Location\",\n                        itemId: \"/view-location\",\n                      },\n                    ],\n                  },\n                  {\n                    title: \"Workers\",\n                    itemId: \"/workers\",\n                    elemBefore: () => <i class=\"material-icons pl-2\">person</i>,\n                    subNav: [\n                      {\n                        title: \"View Workers\",\n                        itemId: \"/view-workers\",\n                      },\n                    ],\n                  },\n                  {\n                    title: \"Admin\",\n                    itemId: \"/admin\",\n                    elemBefore: () => <i class=\"material-icons pl-2\">person</i>,\n                    subNav: [\n                      {\n                        title: \"Add Admin\",\n                        itemId: \"/add-admin\",\n                      },\n                      {\n                        title: \"View Admin\",\n                        itemId: \"/view-admins\",\n                      },\n                    ],\n                  },\n                ]}\n              />\n\n            </div>\n      </div>\n    </div>\n\n\n  );\n}\n\nexport default Sidebar;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewAdmin.jsx",["224","225","226","227","228"],"import React from \"react\";\nimport Nav from \"../components/Nav\";\nimport Footer from \"../components/Footer\";\nimport {Modal} from  \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { heroku_path } from \"./../path\";\nimport { useToasts } from 'react-toast-notifications';\nimport { useHistory } from \"react-router-dom\";\nimport {Ripple} from \"react-css-spinners\";\n\nimport UserImg from \"./../assets/img/marc.jpg\";\n\n\nfunction ViewAdmin( props ) {\n  const [ admin, setAdmin ] = React.useState({});\n  const [ editForm, setEditForm ] = React.useState({});\n  const token = useSelector( state => state.token );\n\n  const [laodingEdit, setloadingEdit] = React.useState(false);\n  const [laodingDelete, setloadingDelete] = React.useState(false);\n\n  const admin_id = props.match.params.id;\n  const [smShowDelete, setSmShowDelete] = React.useState(false);\n  const { addToast } = useToasts();\n  const histroy = useHistory();\n  \n  React.useEffect( () => {\n    const url = `${heroku_path}api/admin/admin/${admin_id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    axios\n    .get(url, config)\n    .then(res =>  {\n        const { _id ,name, email, role } = res.data;\n        console.log({ _id, name, email, role });\n        setAdmin({ _id, name, email, role });\n        setEditForm({ _id, name, email, role });\n    })  \n    .catch( err => {\n      if(err.response.status === 401 && err.response.data === \"unauth\"){\n        addToast('you are not auth to access resource', { appearance: 'info' });\n      }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n        addToast('please provide token', { appearance: 'info' });\n      }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n        addToast('please provide valid token', { appearance: 'info' });\n      }else{\n        addToast('Server Error, Please try Again', { appearance: 'info' });\n      }\n    })\n  },[]);\n\n  const handleEditAdmin = e => {\n    e.preventDefault();\n    console.log( editForm )\n    const url = `${heroku_path}api/admin`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingEdit(true);\n    axios\n    .put(url,editForm, config)\n    .then(res =>  {\n        setloadingEdit(false);\n        const { _id, name, email, role } = res.data;\n        console.log({ _id, name, email, role });\n        setAdmin({ _id, name, email, role });\n        setEditForm({ _id, name, email, role });\n        addToast('admin Edit success', { appearance: 'success' });\n    })  \n    .catch( err => {\n      if(err.response.status === 401 && err.response.data === \"unauth\"){\n        addToast('you are not auth to access resource', { appearance: 'info' });\n      }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n        addToast('please provide token', { appearance: 'info' });\n      }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n        addToast('please provide valid token', { appearance: 'info' });\n      }else{\n        addToast('Server Error, Please try Again', { appearance: 'info' });\n      }\n    })\n  }\n\n  const handleDeleteAdmin = e => {\n    e.preventDefault();\n    const url = `${heroku_path}api/admin/${admin._id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingDelete(true);\n    axios\n    .delete(url, config)\n    .then(res =>  {\n        if( res.data.deletedCount == 1 ){\n          setloadingDelete(false);\n            addToast('delete Admin Successfully', { appearance: 'info' });\n            setSmShowDelete(false);\n            histroy.push(\"/view-admins\");\n        }\n    })  \n    .catch( err => {\n      if(err.response.status === 401 && err.response.data === \"unauth\"){\n        addToast('you are not auth to access resource', { appearance: 'info' });\n      }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n        addToast('please provide token', { appearance: 'info' });\n      }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n        addToast('please provide valid token', { appearance: 'info' });\n      }else{\n        addToast('Server Error, Please try Again', { appearance: 'info' });\n      }\n    })\n  }\n\n\n  // {email: \"Khan@gmail.com\",\n  //  name: \"Mubeen Khan\", \n  //  role: 1, \n  //  token: \"eWjsgo\"}\n\n\n  const printRole = () => {\n    if( admin.role === 3){\n      return \"SuperAdmin\";\n    }else if( admin.role === 2 ){\n      return \"Admin\"\n    }else if( admin.role === 1){\n      return \"Content Creator\"\n    }\n  }\n\n\n  return (\n    <div className=\"ViewLocation\">\n        <div class=\"\">\n        <div class=\"main-panel\">\n\n        <Nav />\n      \n      <div class=\"content\">\n        <div class=\"container-fluid\">\n\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title\">Edit Admin Profile</h4>\n                  <p class=\"card-category\">Complete your profile</p>\n                </div>\n                <div class=\"card-body\">\n                  <form onSubmit={handleEditAdmin}>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n\n                      </div>\n                      <div className=\"col-md-6 text-right\">\n                        <p class=\"card-description\">\n                          <span className=\"font-weight-bold\">Created At: </span>\n                          { admin._id ? new Date( parseInt( admin._id.substring(0,8), 16 ) * 1000 ).toDateString() : \"\" }\n                        </p>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-md-5\">\n                        <div class=\"form-group bmd-form-group\">\n                          {/* <label class=\"bmd-label-floating\"> Name: </label> */}\n                          <input type=\"text\" class=\"form-control\"  required value={editForm.name} onChange={ e => setEditForm({ ...editForm, name: e.target.value }) } />\n                        </div>\n                      </div>\n                      <div class=\"col-md-7\">\n                        <div class=\"form-group bmd-form-group\">\n                          {/* <label class=\"bmd-label-floating\">Email: </label> */}\n                          <input type=\"text\" class=\"form-control\"  required value={editForm.email} onChange={ e => setEditForm({ ...editForm, email: e.target.value }) } />\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"form-group bmd-form-group\">\n                      {/* <label class=\"bmd-label-floating\">Role: </label> */}\n                      {/* <input type=\"text\" class=\"form-control\" value={ printRole() } /> */}\n                      <select name=\"city\" value={editForm.role} required  onChange={ e => setEditForm({...editForm, role: e.target.value}) }  class=\"custom-select mb-3\" id=\"validationCustom04\" style={{border: `1px solid #1668a8` }}>\n                          <option > Select Role </option>\n                          <option value=\"1\"  > Content Editor </option>\n                          <option value=\"2\"  > Admin </option>\n                          <option value=\"3\"  > Super Admin </option>\n                      </select>\n                    </div>\n                    {\n                      laodingEdit ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button type=\"submit\" class=\"btn btn-primary pull-right\">Update Profile</button>\n                    }\n                    <div class=\"clearfix\"></div>\n                  </form>\n                  <hr></hr>\n                  <p class=\"card-description\">\n                    Lorem ipsum dolor obcaecati tempore molestiae ad nulla accusantium adipisci?\n                  </p>\n                  {\n                      laodingDelete ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button onClick={() => { setSmShowDelete(true) }} class=\"btn btn-primary pull-right bg-danger\">Delete Profile</button>\n                    }\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"card card-profile\">\n                <div class=\"card-avatar\">\n                  <a href=\"javascript:;\">\n                    <img class=\"img\" src={UserImg} />\n                  </a>\n                </div>\n                <div class=\"card-body\">\n                  <h6 class=\"card-category text-gray\"> {printRole()} </h6>\n                  <h4 class=\"card-title\">{admin.name}</h4>\n                  <p class=\"card-description\">\n                    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quo, voluptatum perspiciatis illum voluptatem obcaecati tempore molestiae ad nulla accusantium adipisci?\n                  </p>\n                  {/* <a href=\"javascript:;\" class=\"btn btn-primary btn-round\">Follow</a> */}\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n\n        <Footer />\n\n    </div>\n\n        </div>\n\n      <Modal\n          size=\"sm\"\n          show={smShowDelete}\n          onHide={() => setSmShowDelete(false)}\n          aria-labelledby=\"example-modal-sizes-title-sm\"\n      >\n          <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-sm\">\n              Delte Package\n          </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <form onSubmit={handleDeleteAdmin} >\n                  {/* <p>{selectedCategory.name}</p> */}\n                  <p> Are you sure you want to delete <span className=\"font-weight-bold\">  {admin.name} </span> ? </p>\n                  <button type=\"subimt\"  className=\"btn btn-primary btn-block\" > Delete </button>\n              </form>\n          </Modal.Body>\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default ViewAdmin;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewLocation.jsx",["229","230","231","232","233","234","235"],"/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewCustomer.jsx",["236","237","238","239","240"],"import React from \"react\";\nimport Nav from \"../components/Nav\";\nimport Footer from \"../components/Footer\";\nimport {Modal} from  \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { heroku_path } from \"./../path\";\nimport { useToasts } from 'react-toast-notifications';\nimport { useHistory } from \"react-router-dom\";\nimport {Ripple} from \"react-css-spinners\";\nimport EditImg from \"./../assets/img/pencil-fill.png\";\nimport { Link } from \"react-router-dom\";\n\n\nimport userImg from \"./../assets/img/user_img.png\";\n\n\nfunction ViewCustomer( props ) {\n  const [ user, setUser ] = React.useState({});\n  const [ editForm, setEditForm ] = React.useState({});\n  const token = useSelector( state => state.token );\n\n  const [laodingEdit, setloadingEdit] = React.useState(false);\n  const [laodingDelete, setloadingDelete] = React.useState(false);\n\n  const user_id = props.match.params.id;\n  const [smShowDelete, setSmShowDelete] = React.useState(false);\n  const { addToast } = useToasts();\n  const histroy = useHistory();\n\n  \n  React.useEffect( () => {\n    const url = `${heroku_path}api/users/${user_id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    axios\n    .get(url, config)\n    .then(res =>  {\n        setUser( res.data );\n        setEditForm( res.data );\n        console.log(res.data);\n        console.log( res.data.packages  );\n    })  \n    .catch( err => {\n     \n    })\n  },[]);\n\n  const handleEditUser = e => {\n    e.preventDefault();\n    console.log( editForm )\n    const url = `${heroku_path}api/users`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingEdit(true);\n    axios\n    .put(url,editForm, config)\n    .then(res =>  {\n        setloadingEdit(false);\n        addToast('user Edit success', { appearance: 'success' });\n    })  \n    .catch( err => {\n      if(err.response.status === 401 && err.response.data === \"unauth\"){\n        addToast('you are not auth to access resource', { appearance: 'info' });\n      }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n        addToast('please provide token', { appearance: 'info' });\n      }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n        addToast('please provide valid token', { appearance: 'info' });\n      }else{\n        addToast('Server Error, Please try Again', { appearance: 'info' });\n      }\n    })\n  }\n\n  const handleDeleteUser = e => {\n    e.preventDefault();\n    const url = `${heroku_path}api/users/${user._id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingDelete(true);\n    axios\n    .delete(url, config)\n    .then(res =>  {\n        if( res.data.deletedCount == 1 ){\n            setloadingDelete(false);\n            addToast('delete User Successfully', { appearance: 'info' });\n            setSmShowDelete(false);\n            histroy.push(\"/view-customers\");\n        }\n    })  \n    .catch( err => {\n      if(err.response.status === 401 && err.response.data === \"unauth\"){\n        addToast('you are not auth to access resource', { appearance: 'info' });\n      }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n        addToast('please provide token', { appearance: 'info' });\n      }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n        addToast('please provide valid token', { appearance: 'info' });\n      }else{\n        addToast('Server Error, Please try Again', { appearance: 'info' });\n      }\n    })\n  }\n\n  // {email: \"Khan@gmail.com\",\n  //  name: \"Mubeen Khan\", \n  //  role: 1, \n  //  token: \"eWjsgo\"}\n\n\n  const printUserBusiness = user => {\n    if( user.roles ){\n      if ( user.roles.includes(\"B_USER\")  ) return \"Business User\"\n      return \"Regular User\"\n    }\n  }\n\n  const printUserType = user => {\n    if ( user.isFacebookUser ) return \"Facebook User\"\n    else if ( user.isGoogleUser ) return \"Google User\"\n    else if ( user.isCustomUser ) return \"Custom User\"\n  }\n\n  return (\n    <div className=\"ViewLocation\">\n        <div class=\"\">\n        <div class=\"main-panel\">\n\n        <Nav />\n      \n      <div class=\"content\">\n        <div class=\"container-fluid\">\n\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title\">Edit User Profile</h4>\n                  <p class=\"card-category\">Complete your profile</p>\n                </div>\n                <div class=\"card-body\">\n                  <form onSubmit={handleEditUser}>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n\n                      </div>\n                      <div className=\"col-md-6 text-right\">\n                        <p class=\"card-description\">\n                          <span className=\"font-weight-bold\">Created At: </span>\n                          { user._id ? new Date( parseInt( user._id.substring(0,8), 16 ) * 1000 ).toDateString() : \"\" }\n                        </p>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-md-5\">\n                        <div class=\"form-group bmd-form-group\">\n                          {/* <label class=\"bmd-label-floating\"> Name: </label> */}\n                          <input type=\"text\" class=\"form-control\"  required value={editForm.name} onChange={ e => setEditForm({ ...editForm, name: e.target.value }) } />\n                        </div>\n                      </div>\n                      <div class=\"col-md-7\">\n                        <div class=\"form-group bmd-form-group\">\n                          {/* <label class=\"bmd-label-floating\">Email: </label> */}\n                          <input disabled type=\"text\" class=\"form-control\"  required value={editForm.email} onChange={ e => setEditForm({ ...editForm, email: e.target.value }) } />\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-md-5\">\n                        <div class=\"form-group bmd-form-group\">\n                          {/* <label class=\"bmd-label-floating\"> Name: </label> */}\n                          <input type=\"text\" class=\"form-control\" disabled value={printUserType(user)}  />\n                        </div>\n                      </div>\n                      <div class=\"col-md-6\">\n                        <div class=\"form-group bmd-form-group\">\n                          {/* <label class=\"bmd-label-floating\"> Name: </label> */}\n                          <input type=\"text\" class=\"form-control\" disabled value={printUserBusiness(user)}  />\n                        </div>\n                      </div>\n                    </div>\n                    {\n                      laodingEdit ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button type=\"submit\" class=\"btn btn-primary pull-right\">Update Profile</button>\n                    }\n                    <div class=\"clearfix\"></div>\n                  </form>\n                  <hr></hr>\n                  <p class=\"card-description\">\n                    Lorem ipsum dolor obcaecati tempore molestiae ad nulla accusantium adipisci?\n                  </p>\n                  {\n                      laodingDelete ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button onClick={() => { setSmShowDelete(true) }} class=\"btn btn-primary pull-right bg-danger\">Delete Profile</button>\n                    }\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"card card-profile\">\n                <div class=\"card-avatar\">\n                  <a href=\"javascript:;\">\n                    <img class=\"img img-fluid rounded-circle\" style={{width: 120, height:120}} src={ user.imageUrl ? user.imageUrl : userImg } />\n                  </a>\n                </div>\n                <div class=\"card-body\">\n                  <h6 class=\"card-category text-gray\">  </h6>\n                  <h4 class=\"card-title\">{user.name}</h4>\n                  <p class=\"card-description\">\n                    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quo, voluptatum perspiciatis illum voluptatem obcaecati tempore molestiae ad nulla accusantium adipisci?\n                  </p>\n                  {/* <a href=\"javascript:;\" class=\"btn btn-primary btn-round\">Follow</a> */}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row mt-5\" style={{ maxHeight:500, overflowY: 'scroll' }} >\n            <div class=\"col-md-12\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title \">Business Users Table</h4>\n                  <p class=\"card-category\"> Here is table of all users in system</p>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"table-responsive\">\n                    <table class=\"table\">\n                      <thead class=\" text-primary\">\n                        <th> No. </th>\n                        <th> Package </th>\n                        <th> Name </th>\n                        <th> Cell </th>\n                        <th> Area & City </th>\n                        <th> Edit </th>\n                      </thead>\n                      <tbody>\n                        {\n                          //  <tr className=\"text-center\"><Ripple color=\"#8553aa\" size={30} /></tr> \n                          user.packages &&\n                          user.packages.map( ( e, index) => \n                          <>\n                            <tr>\n                                <td> {index+1} </td>\n                                {\n                                  e.id &&\n                                  <td> { e.id.name } </td>\n                                }\n                                {\n                                  e.b_id ?\n                                  <>\n                                    <td> { e.b_id.name } </td>\n                                    <td> { e.b_id.cellno } </td>\n                                    <td> { e.b_id.area + \" , \" + e.b_id.city } </td>\n                                    <Link to={`/view-business/${e.b_id._id}`}> <td> <img className=\"cursor-pointer\" src={EditImg} alt=\"\"/>  </td> </Link>\n                                  </> :\n                                 <>\n                                  <td> - </td>\n                                  <td> - </td>\n                                  <td> - </td>\n                                  <td> - </td>\n                                </>\n                                }\n                            </tr> \n                          </>\n                          )\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n\n        </div>\n      </div>\n\n        <Footer />\n\n    </div>\n\n        </div>\n\n      <Modal\n          size=\"sm\"\n          show={smShowDelete}\n          onHide={() => setSmShowDelete(false)}\n          aria-labelledby=\"example-modal-sizes-title-sm\"\n      >\n          <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-sm\">\n              Delte Package\n          </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <form onSubmit={handleDeleteUser} >\n                  {/* <p>{selectedCategory.name}</p> */}\n                  <p> Are you sure you want to delete <span className=\"font-weight-bold\">  {user.name} </span> ? </p>\n                  <button type=\"subimt\"  className=\"btn btn-primary btn-block\" > Delete </button>\n              </form>\n          </Modal.Body>\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default ViewCustomer;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewUser.jsx",["241","242","243","244","245"],"import React from \"react\";\nimport Nav from \"../components/Nav\";\nimport Footer from \"../components/Footer\";\nimport {Modal} from  \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { heroku_path } from \"./../path\";\nimport { useToasts } from 'react-toast-notifications';\nimport { useHistory } from \"react-router-dom\";\nimport {Ripple} from \"react-css-spinners\";\n\nimport userImg from \"./../assets/img/user_img.png\";\n\n\nfunction ViewUser( props ) {\n  const [ user, setUser ] = React.useState({});\n  const [ editForm, setEditForm ] = React.useState({});\n  const token = useSelector( state => state.token );\n\n  const [laodingEdit, setloadingEdit] = React.useState(false);\n  const [laodingDelete, setloadingDelete] = React.useState(false);\n\n  const user_id = props.match.params.id;\n  const [smShowDelete, setSmShowDelete] = React.useState(false);\n  const { addToast } = useToasts();\n  const histroy = useHistory();\n\n  \n  React.useEffect( () => {\n    const url = `${heroku_path}api/users/${user_id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    axios\n    .get(url, config)\n    .then(res =>  {\n        setUser( res.data );\n        setEditForm( res.data );\n        console.log(res.data);\n    })  \n    .catch( err => {\n     \n    })\n  },[]);\n\n  const handleEditUser = e => {\n    e.preventDefault();\n    console.log( editForm )\n    const url = `${heroku_path}api/users`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingEdit(true);\n    axios\n    .put(url,editForm, config)\n    .then(res =>  {\n        setloadingEdit(false);\n        addToast('user Edit success', { appearance: 'success' });\n    })  \n    .catch( err => {\n      if(err.response.status === 401 && err.response.data === \"unauth\"){\n        addToast('you are not auth to access resource', { appearance: 'info' });\n      }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n        addToast('please provide token', { appearance: 'info' });\n      }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n        addToast('please provide valid token', { appearance: 'info' });\n      }else{\n        addToast('Server Error, Please try Again', { appearance: 'info' });\n      }\n    })\n  }\n\n  const handleDeleteUser = e => {\n    e.preventDefault();\n    const url = `${heroku_path}api/users/${user._id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingDelete(true);\n    axios\n    .delete(url, config)\n    .then(res =>  {\n        if( res.data.deletedCount == 1 ){\n            setloadingDelete(false);\n            addToast('delete User Successfully', { appearance: 'info' });\n            setSmShowDelete(false);\n            histroy.push(\"/view-customers\");\n        }\n    })  \n    .catch( err => {\n      if(err.response.status === 401 && err.response.data === \"unauth\"){\n        addToast('you are not auth to access resource', { appearance: 'info' });\n      }else if(err.response.status === 401 && err.response.data === \"Access denied. No token provided.\"){\n        addToast('please provide token', { appearance: 'info' });\n      }else if(err.response.status === 403 && err.response.data === 'invalid token'){\n        addToast('please provide valid token', { appearance: 'info' });\n      }else{\n        addToast('Server Error, Please try Again', { appearance: 'info' });\n      }\n    })\n  }\n\n  // {email: \"Khan@gmail.com\",\n  //  name: \"Mubeen Khan\", \n  //  role: 1, \n  //  token: \"eWjsgo\"}\n\n\n  const printUserType = (user) => {\n    if ( user.isFacebookUser ) return \"Facebook User\"\n    else if ( user.isGoogleUser ) return \"Google User\"\n    else if ( user.isGoogleUser ) return \"Custom User\"\n  }\n\n\n  return (\n    <div className=\"ViewLocation\">\n        <div class=\"\">\n        <div class=\"main-panel\">\n\n        <Nav />\n      \n      <div class=\"content\">\n        <div class=\"container-fluid\">\n\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title\">Edit User Profile</h4>\n                  <p class=\"card-category\">Complete your profile</p>\n                </div>\n                <div class=\"card-body\">\n                  <form onSubmit={handleEditUser}>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n\n                      </div>\n                      <div className=\"col-md-6 text-right\">\n                        <p class=\"card-description\">\n                          <span className=\"font-weight-bold\">Created At: </span>\n                          { user._id ? new Date( parseInt( user._id.substring(0,8), 16 ) * 1000 ).toDateString() : \"\" }\n                        </p>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-md-5\">\n                        <div class=\"form-group bmd-form-group\">\n                          {/* <label class=\"bmd-label-floating\"> Name: </label> */}\n                          <input type=\"text\" class=\"form-control\"  required value={editForm.name} onChange={ e => setEditForm({ ...editForm, name: e.target.value }) } />\n                        </div>\n                      </div>\n                      <div class=\"col-md-7\">\n                        <div class=\"form-group bmd-form-group\">\n                          {/* <label class=\"bmd-label-floating\">Email: </label> */}\n                          <input disabled type=\"text\" class=\"form-control\"  required value={editForm.email} onChange={ e => setEditForm({ ...editForm, email: e.target.value }) } />\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-md-5\">\n                        <div class=\"form-group bmd-form-group\">\n                          {/* <label class=\"bmd-label-floating\"> Name: </label> */}\n                          <input type=\"text\" class=\"form-control\" disabled value={printUserType(user)}  />\n                        </div>\n                      </div>\n                    </div>\n                    {\n                      laodingEdit ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button type=\"submit\" class=\"btn btn-primary pull-right\">Update Profile</button>\n                    }\n                    <div class=\"clearfix\"></div>\n                  </form>\n                  <hr></hr>\n                  <p class=\"card-description\">\n                    Lorem ipsum dolor obcaecati tempore molestiae ad nulla accusantium adipisci?\n                  </p>\n                  {\n                      laodingDelete ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button onClick={() => { setSmShowDelete(true) }} class=\"btn btn-primary pull-right bg-danger\">Delete Profile</button>\n                    }\n                </div>\n              </div>\n            </div>\n            <div class=\"col-md-4\">\n              <div class=\"card card-profile\">\n                <div class=\"card-avatar\">\n                  <a href=\"javascript:;\">\n                    <img class=\"img img-fluid rounded-circle\" style={{width: 120, height:120}} src={ user.imageUrl ? user.imageUrl : userImg } />\n                  </a>\n                </div>\n                <div class=\"card-body\">\n                  <h6 class=\"card-category text-gray\">  </h6>\n                  <h4 class=\"card-title\">{user.name}</h4>\n                  <p class=\"card-description\">\n                    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quo, voluptatum perspiciatis illum voluptatem obcaecati tempore molestiae ad nulla accusantium adipisci?\n                  </p>\n                  {/* <a href=\"javascript:;\" class=\"btn btn-primary btn-round\">Follow</a> */}\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n\n        <Footer />\n\n    </div>\n\n        </div>\n\n      <Modal\n          size=\"sm\"\n          show={smShowDelete}\n          onHide={() => setSmShowDelete(false)}\n          aria-labelledby=\"example-modal-sizes-title-sm\"\n      >\n          <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-sm\">\n              Delte Package\n          </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <form onSubmit={handleDeleteUser} >\n                  {/* <p>{selectedCategory.name}</p> */}\n                  <p> Are you sure you want to delete <span className=\"font-weight-bold\">  {user.name} </span> ? </p>\n                  <button type=\"subimt\"  className=\"btn btn-primary btn-block\" > Delete </button>\n              </form>\n          </Modal.Body>\n      </Modal>\n\n    </div>\n  );\n}\n\nexport default ViewUser;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/pages/ViewBusiness.jsx",["246","247","248","249","250","251","252","253","254","255","256","257","258"],"import React, { useState } from \"react\";\nimport Nav from \"../components/Nav\";\nimport Footer from \"../components/Footer\";\nimport {Modal} from  \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { heroku_path } from \"./../path\";\nimport { useToasts } from 'react-toast-notifications';\nimport { useHistory } from \"react-router-dom\";\nimport {Ripple} from \"react-css-spinners\";\nimport EditImg from \"./../assets/img/pencil-fill.png\";\nimport { Link } from \"react-router-dom\";\nimport closeImg from \"./../assets/img/close-line.png\";\n\n\nimport userImg from \"./../assets/img/user_img.png\";\nimport reviewImg from \"./../assets/img/message-2-fill.png\";\n\n\nfunction ViewBusiness( props ) {\n  const [ user, setUser ] = React.useState({});\n  const [ business, setBusiness ] = React.useState({});\n  const [ products, setProducts ] = React.useState([]);\n  const [ services, setServices ] = React.useState([]);\n  const token = useSelector( state => state.token );\n\n  const [laodingEdit, setloadingEdit] = React.useState(false);\n  const [laodingDelete, setloadingDelete] = React.useState(false);\n\n  const [location, setlocation ] = React.useState([]);\n  const [categoryList, setCategoryList ] = React.useState([]);\n\n  const [ showReview, setShowReview ] = React.useState(false);\n  const [ showReviewService, setShowReviewService ] = React.useState(false);\n\n  const [ seletedReviewProduct, setSelectedReviewProduct ] = React.useState({});\n  const [ seletedReviewService, setSelectedReviewService ] = React.useState({});\n\n  const [ seletedProduct, setSelectedProduct ] = React.useState({name: \"\", description: \"\", reviews: []});\n  const [ seletedService, setSelectedService ] = React.useState({name: \"\", description: \"\", reviews: []});\n\n  const [ showEditProduct, setShowEditProdust ] = React.useState(false);\n  const [ showDeleteProduct, setShowDeleteProdust ] = React.useState(false);\n\n  const [ showEditService, setShowEditService ] = React.useState(false);\n  const [ showDeleteService, setShowDeleteService ] = React.useState(false);\n\n  const business_id = props.match.params.id;\n  const [smShowDelete, setSmShowDelete] = React.useState(false);\n  const { addToast } = useToasts();\n  const histroy = useHistory();\n\n  \n  React.useEffect( () => {\n    const url = `${heroku_path}api/businesses/${business_id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    axios\n    .get(url, config)\n    .then(res =>  {\n        setBusiness( res.data.business );\n        setProducts( res.data.products );\n        setServices( res.data.services );\n    })  \n    .catch( err => console.log(err) );\n\n    let urlLocation = `https://dialbox-admin.herokuapp.com/api/city`;\n    axios\n      .get( urlLocation )\n      .then( res => {\n        setlocation( res.data )\n      })\n      .catch( err => console.log(err));\n\n    axios\n      .get( `https://dialbox-admin.herokuapp.com/api/category` )\n      .then( res => {\n        setCategoryList( res.data )\n      })\n      .catch( err => console.log(err));\n\n  },[]);\n\n  const handleEditBusiness = e => {\n    e.preventDefault();\n    const url = `${heroku_path}api/businesses`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingEdit(true);\n    axios\n    .put(url,business, config)\n    .then(res =>  {\n        setloadingEdit(false);\n        setBusiness( res.data );\n        console.log(res.data)\n        addToast('business Edit success', { appearance: 'success' });\n    })  \n    .catch( err => {\n    })\n  }\n\n  const handleDeleteBusiness = e => {\n    e.preventDefault();\n    const url = `${heroku_path}api/businesses/${business_id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingDelete(true);\n    axios\n    .delete(url, config)\n    .then(res =>  {\n        if( res.data.deletedCount == 1 ){\n            setloadingDelete(false);\n            addToast('delete Business Successfully', { appearance: 'info' });\n            setSmShowDelete(false);\n            histroy.push(\"/view-customers\");\n        }\n    })  \n    .catch( err => { })\n  }\n\n  const handleEditProduct = e => {\n    console.log(seletedProduct)\n    e.preventDefault();\n    const url = `${heroku_path}api/products`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingEdit(true);\n    axios\n    .put(url, { _id: seletedProduct._id, name: seletedProduct.name, description: seletedProduct.description } , config)\n    .then(res =>  {\n        setloadingEdit(false);\n        const newArr = products.map(e => {\n          if( e._id === res.data._id ){ return res.data; }\n          return e;\n        })\n        console.log(newArr)\n        setProducts(newArr);\n        setShowEditProdust(false);\n        addToast('Product Edit success', { appearance: 'success' });\n    })  \n    .catch( err => {\n      console.log(err)\n    })\n  }\n\n\n  const handleEditService = e => {\n    console.log(seletedService)\n    e.preventDefault();\n    const url = `${heroku_path}api/services`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingEdit(true);\n    axios\n    .put(url, { _id: seletedService._id, name: seletedService.name, description: seletedService.description } , config)\n    .then(res =>  {\n        setloadingEdit(false);\n        const newArr = services.map(e => {\n          if( e._id === res.data._id ) return res.data; \n          return e;\n        });\n        setServices(newArr);\n        setShowEditService(false);\n        addToast('Product Edit success', { appearance: 'success' });\n    })  \n    .catch( err => {\n      console.log(err)\n    })\n  }\n\n  const handleDeleteProduct = e => {\n    e.preventDefault();\n    const url = `${heroku_path}api/products/${seletedProduct._id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingDelete(true);\n    axios\n    .delete(url, config)\n    .then(res =>  {\n      setloadingDelete(false);\n      const newArr = products.filter(e => e._id !== res.data._id );\n      console.log(newArr);\n      setProducts(newArr);\n      addToast('product deleted Successfully', { appearance: 'info' });\n      setShowDeleteProdust(false);\n    })  \n    .catch( err => { })\n  }\n\n  const handleDeleteService = e => {\n    e.preventDefault();\n    const url = `${heroku_path}api/services/${seletedService._id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingDelete(true);\n    axios\n    .delete(url, config)\n    .then(res =>  {\n      setloadingDelete(false);\n      const newArr = services.filter(e => e._id !== res.data._id );\n      setServices(newArr);\n      addToast('product deleted Successfully', { appearance: 'info' });\n      setShowDeleteService(false);\n    })  \n    .catch( err => { })\n  }\n\n\n  const handleDeleteReviewProduct = product_temp => {\n    console.log( product_temp )\n    const url = `${heroku_path}api/products/${seletedProduct._id}/${product_temp._id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingDelete(true);\n    axios\n    .delete(url, config)\n    .then(res =>  {\n      console.log( res )\n      const newArr = products.map(e => {\n        if( e._id === res.data._id ) return res.data; \n        return e;\n      });      setProducts(newArr);\n      setShowReview(false);\n      setloadingDelete(false);\n      addToast('comment deleted Successfully', { appearance: 'info' });\n    })  \n    .catch( err => { })\n  }\n\n  const handleDeleteReviewService = service_temp => {\n    const url = `${heroku_path}api/services/${seletedService._id}/${service_temp._id}`;\n    const config = { headers: {\"x-auth-token\": token }};\n    setloadingDelete(true);\n    axios\n    .delete(url, config)\n    .then(res =>  {\n      console.log( res )\n      const newArr = services.map(e => {\n        if( e._id === res.data._id ) return res.data; \n        return e;\n      });      \n      setServices(newArr);\n      setShowReviewService(false);\n      setloadingDelete(false);\n      addToast('comment service deleted Successfully', { appearance: 'info' });\n    })  \n    .catch( err => console.log(err) )\n  }\n\n  const printUserBusiness = user => {\n    if( user.roles ){\n      if ( user.roles.includes(\"B_USER\")  ) return \"Business User\"\n      return \"Regular User\"\n    }\n  }\n\n  const printUserType = user => {\n    if ( user.isFacebookUser ) return \"Facebook User\"\n    else if ( user.isGoogleUser ) return \"Google User\"\n    else if ( user.isGoogleUser ) return \"Custom User\"\n  }\n\n  return (\n    <div className=\"ViewLocation\">\n        <div class=\"\">\n        <div class=\"main-panel\">\n\n        <Nav />\n      \n      <div class=\"content\">\n        <div class=\"container-fluid\">\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title\">Edit Business</h4>\n                  <p class=\"card-category\">Complete your profile</p>\n                </div>\n                <div class=\"card-body\">\n                  <form onSubmit={handleEditBusiness}>\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n\n                      </div>\n                      <div className=\"col-md-6 text-right\">\n                        <p class=\"card-description\">\n                          <span className=\"font-weight-bold\">Created At: </span>\n                          { business._id ? new Date( parseInt( business._id.substring(0,8), 16 ) * 1000 ).toDateString() : \"\" }\n                        </p>\n                      </div>\n                    </div>\n\n                    <div className=\"personal_form mb-4\">\n                    <h4 className=\"text-pri mb-3\">Personal Info</h4>\n                    <div class=\"form-row mb-4\">\n                      <div class=\"col\">\n                        <label htmlFor=\"\" className=\"mb-0\">Buisness Name</label>\n                        <input type=\"text\" value={business.name} onChange={(e) => setBusiness({ ...business, name: e.target.value })} className=\"form-control\" />\n                      </div>\n                      <div class=\"col\">\n                      <label htmlFor=\"\" className=\"mb-0\">Contact Person</label>\n                        <input value={business.contact} onChange={(e) => setBusiness({ ...business, contact: e.target.value })} className=\"form-control\" />\n                      </div>\n                    </div>\n\n                    <div class=\"form-row mb-4\">\n                      <div class=\"col\">\n                      <label htmlFor=\"\" className=\"mb-0\">Buisness Email</label>\n                        <input value={business.email} onChange={(e) => setBusiness({ ...business, email: e.target.value })} className=\"form-control\" />\n                      </div>\n                      <div class=\"col\">\n                      <label htmlFor=\"\" className=\"mb-0\">Whatsapp Number</label>\n                        <input value={business.whatsapp} onChange={(e) => setBusiness({ ...business, whatsapp: e.target.value })} className=\"form-control\" />\n                      </div>\n                    </div>\n\n                    <div class=\"form-row mb-4\">\n                      <div class=\"col\">\n                      <label htmlFor=\"\" className=\"mb-0\">Cell No</label>\n                        <input type=\"number\" value={business.cellno} onChange={(e) => setBusiness({ ...business, cellno: e.target.value })} className=\"form-control\" />\n                      </div>\n                      <div class=\"col\">\n                        <label htmlFor=\"\" className=\"mb-0\">Land Line No</label>\n                        <input type=\"number\" value={business.land_line_no} onChange={(e) => setBusiness({ ...business, business: e.target.value })} className=\"form-control\" />\n                      </div>\n                    </div>\n\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12  mb-4 px-0\">\n                      <label htmlFor=\"\" className=\"mb-0\">Store type</label>\n                      <select value={ business.store_type } onChange={(e) => setBusiness({ ...business, store_type: e.target.value })} required className=\"custom-select\" style={{ border: `1px solid #1668a8` }}>\n                        <option>Virtual Store / Physical Store</option>\n                        <option value=\"Virtual\">Virtual</option>\n                        <option value=\"Physical\">Physical</option>\n                      </select>\n                    </div>\n                  </div>\n\n                  <div className=\"description_form mb-4\">\n                    <h4 className=\"text-pri mb-3\">Description Info</h4>\n                    <div class=\"form-row mb-4\">\n                      <div class=\"col\">\n                        <label htmlFor=\"\" className=\"mb-0\">Business City</label>\n                        <select name=\"city\" value={ business.city }  onChange={(e) => setBusiness({ ...business, city: e.target.value })}  required className=\"custom-select\" style={{border: `1px solid #1668a8` }}>\n                          <option > Select City </option>\n                          {\n                            location.map(e => ( \n                              <option value={ e.name } key={ e._id } > { e.name } </option>\n                            ))\n                          }\n                        </select>\n\n                      </div>\n                      <div class=\"col\">\n                        <label htmlFor=\"\" className=\"mb-0\">Business Area</label>\n                        {/* <input /> */}\n                        <select name=\"area\" value={business.area} onChange={(e) => setBusiness({ ...business, area: e.target.value })} required className=\"custom-select\" style={{border: `1px solid #1668a8` }}>\n                            <option > Select Area </option>\n                            {\n                              location.map(e => \n                                  e.name === business.city  &&\n                                  e.area.map(area => <option value={ area.name } key={ area.name } > { area.name } </option> )\n                                  // (<option> First select city </option>) \n                                )\n                            }\n                          </select>\n                      \n                      </div>\n                    </div>\n\n                    <div class=\"form-row mb-4\">\n                      <div class=\"col\">\n                        \n                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12  px-0\">\n                          <label htmlFor=\"\" className=\"mb-0\">Business Province</label>\n                          <select value={business.province} onChange={(e) => setBusiness({ ...business, province: e.target.value })} required className=\"custom-select\" style={{ border: `1px solid #1668a8` }}>\n                            <option>Province</option>\n                            <option value=\"Punjab\">Punjab</option>\n                            <option value=\"KPK\">KPK</option>\n                            <option value=\"Sindh\">Sindh</option>\n                          </select>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12  px-0\">\n                          <label htmlFor=\"\" className=\"mb-0\">Business Country</label>\n                          <select name=\"country\" required className=\"custom-select\" style={{ border: `1px solid #1668a8` }}>\n                            <option value=\"Pakistan\">Pakistan</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"form-row mb-4\">\n                      <div class=\"col\">\n                        <label htmlFor=\"\" className=\"mb-0\">Business Url</label>\n                        <input value={business.url}  className=\"form-control\" onChange={(e) => setBusiness({ ...business, url: e.target.value })} />\n                      </div>\n                      <div class=\"col\">\n                        <label htmlFor=\"\" className=\"mb-0\">Business Date</label>\n                        <input type=\"date\"  className=\"form-control\" value={business.date} onChange={(e) => setBusiness({ ...business, date: e.target.value })} style={{ height: 32 }} />\n                      </div>\n                    </div>\n\n                    <div class=\"form-row mb-4\">\n                      <div class=\"col\">\n                        <label htmlFor=\"\" className=\"mb-0\">Business timing</label>\n                        <input  className=\"form-control\" value={business.timings} onChange={(e) => setBusiness({ ...business, timings: e.target.value })} />\n                      </div>\n                      <div class=\"col\">\n                        <label htmlFor=\"\" className=\"mb-0\">number of employees</label>\n                        <input type=\"number\" className=\"form-control\" value={business.number_of_employees} onChange={(e) => setBusiness({ ...business, number_of_employees: e.target.value })} />\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"category_form mb-3\">\n                    <h4 className=\"text-pri mb-3\">Category Info</h4>\n                    <div class=\"form-row mb-4\">\n                      <div class=\"col\">\n                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12  px-0\">\n                          <label htmlFor=\"\" className=\"mb-0\"> category </label>\n                          {/* <select required className=\"form-control\" style={{ border: `1px solid #1668a8` }}>\n                            <option value=\"\">Category</option>\n                            <option value=\"one\">One</option>\n                            <option value=\"one\">Two</option>\n                          </select> */}\n                          <select name=\"category\"  value={business.category} onChange={(e) => setBusiness({ ...business, category: e.target.value })}  required className=\"custom-select\" style={{ border: `1px solid #1668a8` }}>\n                            <option > Select Category </option>\n                            {\n                              categoryList.map(e => ( \n                                <option value={ e.name } key={ e._id } > { e.name } </option>\n                              ))\n                            }\n                          </select>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12  px-0\">\n                          <label htmlFor=\"\" className=\"mb-0\">Sub</label>\n                          {/* <select value={business.subCategory} onChange={(e) => setBusiness({ ...business, subCategory: e.target.value })} id=\"store_type\" required className=\"form-control\" style={{ border: `1px solid #1668a8` }}>\n                            <option value=\"\">Sub-Category</option>\n                            <option value=\"one\">one</option>\n                            <option value=\"two\">Two</option>\n                            <option value=\"three\">Three</option>\n                          </select> */}\n                          <select name=\"subCategory\"  value={business.subCategory} onChange={(e) => setBusiness({ ...business, subCategory: e.target.value })}   id=\"store_type\" required className=\"custom-select\" style={{ border: `1px solid #1668a8` }}>\n                              <option > Select Area </option>\n                              {\n                                categoryList.map(e => \n                                    e.name === business.category  &&\n                                    e.SubCategory.map(area => <option value={ area.name } key={ area.name } > { area.name } </option> )\n                                    // (<option> First select city </option>) \n                                  )\n                              }\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"form-row mb-4\">\n                      <div class=\"col\">\n                      <label htmlFor=\"\" className=\"mb-0\">service</label>\n                        <input name=\"service\"  className=\"form-control\" value={business.service} onChange={(e) => setBusiness({ ...business, service: e.target.value })} />\n                      </div>\n                      <div class=\"col\">\n                        <label htmlFor=\"\" className=\"mb-0\">Industry</label>\n                        <input type=\"text\"  className=\"form-control\" value={business.industry} onChange={(e) => setBusiness({ ...business, industry: e.target.value })} />\n                      </div>\n                    </div>\n\n                    <label htmlFor=\"\" className=\"mb-0\">Bio</label>\n                    <textarea\n                      class=\"form-control mb-4\"\n                      rows=\"3\"\n                      defaultValue={business.bio}\n                      onChange={(e) => setBusiness({ ...business, bio: e.target.value })}\n                    ></textarea>\n                  </div>\n\n                    {\n                      laodingEdit ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button type=\"submit\" class=\"btn btn-primary pull-right\">Update Business</button>\n                    }\n                    <div class=\"clearfix\"></div>\n                  </form>\n                  <hr></hr>\n                  <p class=\"card-description\">\n                    Lorem ipsum dolor obcaecati tempore molestiae ad nulla accusantium adipisci?\n                  </p>\n                  {\n                      laodingDelete ? \n                      <div style={{height:50}} class=\" text-center\"><Ripple color=\"#8553aa\" size={30} /></div>:\n                      <button onClick={() => { setSmShowDelete(true) }} class=\"btn btn-primary pull-right bg-danger\">Delete Business</button>\n                    }\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row mt-5\" style={{ maxHeight:500, overflowY: 'scroll' }} >\n            <div class=\"col-md-12\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title \">Products Table</h4>\n                  <p class=\"card-category\"> Here is table of all users in system</p>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"table-responsive\">\n                    <table class=\"table\">\n                      <thead class=\" text-primary\">\n                        <th> No. </th>\n                        {/* <th> Img </th> */}\n                        <th> Name </th>\n                        <th> Description </th>\n                        <th> Created At </th>\n                        <th> Reviews </th>\n                        <th> Edit </th>\n                        <th> Delete </th>\n                      </thead>\n                      <tbody>\n                        {\n                            // laodingList ?\n                            // <Ripple color=\"#8553aa\" size={30} />:\n                            products.map( (e, index) => \n                              <>\n                                  <tr>\n                                      <td> {index+1} </td>\n                                      {/* <td> \n                                        <img className='img img-fluid' style={{ height:100, width:100 }} src={ e.productImages[0] } ></img>\n                                      </td> */}\n                                      <td> {e.name} </td>\n                                      <td> {e.description} </td>\n                                      <td> { e._id ? new Date( parseInt( e._id.substring(0,8), 16 ) * 1000 ).toDateString() : \"\" } </td>\n                                      <td style={{ color: '#1668a8', cursor: 'pointer' }} onClick={ () => { setSelectedProduct(e); setShowReview(true) }} > { e.reviews && e.reviews.length } <img src={reviewImg} alt=\"\"/> </td>\n                                      <td> <img onClick={ () => {setSelectedProduct(e); setShowEditProdust(true) }} className=\"cursor-pointer\" src={EditImg} alt=\"\"/>  </td>\n                                      <td> <img onClick={ () => {setSelectedProduct(e); setShowDeleteProdust(true) }} className=\"cursor-pointer\" src={closeImg} alt=\"\"/> </td>\n                                  </tr>\n                              </>\n                              )\n                          } \n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n          <div class=\"row mt-5\" style={{ maxHeight:500, overflowY: 'scroll' }} >\n            <div class=\"col-md-12\">\n              <div class=\"card\">\n                <div class=\"card-header card-header-primary\">\n                  <h4 class=\"card-title \">Services Table</h4>\n                  <p class=\"card-category\"> Here is table of all users in system</p>\n                </div>\n                <div class=\"card-body\">\n                  <div class=\"table-responsive\">\n                    <table class=\"table\">\n                      <thead class=\" text-primary\">\n                        <th> No. </th>\n                        <th> Name </th>\n                        <th> Description </th>\n                        <th> Created At </th>\n                        <th> Reviews </th>\n                        <th> Edit </th>\n                        <th> Delete  </th>\n                      </thead>\n                      <tbody>\n                        {\n                          // laodingList ?\n                          // <Ripple color=\"#8553aa\" size={30} />:\n                          services &&\n                          services.map( (e, index) => \n                            <>\n                                <tr>\n                                    <td> {index+1} </td>\n                                    <td> {e.name} </td>\n                                    <td> {e.description} </td>\n                                    <td> { e._id ? new Date( parseInt( e._id.substring(0,8), 16 ) * 1000 ).toDateString() : \"\" } </td>\n                                    <td  style={{ color: '#1668a8', cursor: 'pointer' }} onClick={ () => { setSelectedService(e); setShowReviewService(true) }} > { e.reviews && e.reviews.length } <img src={reviewImg} alt=\"\"/> </td>\n                                    <td> <img onClick={ () => {setSelectedService(e); setShowEditService(true) }} className=\"cursor-pointer\" src={EditImg} alt=\"\"/>  </td>\n                                    <td> <img onClick={ () => {setSelectedService(e); setShowDeleteService(true) }}  className=\"cursor-pointer\" src={closeImg} alt=\"\"/> </td>\n                                </tr>\n                            </>\n                            )\n                          } \n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n\n        </div>\n      </div>\n\n        <Footer />\n\n    </div>\n\n        </div>\n\n      <Modal\n          size=\"lg\"\n          show={smShowDelete}\n          onHide={() => setSmShowDelete(false)}\n          aria-labelledby=\"example-modal-sizes-title-sm\"\n      >\n          <Modal.Header closeButton>\n          <Modal.Title id=\"example-modal-sizes-title-sm\">\n              Delte Package\n          </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <form onSubmit={handleDeleteBusiness} >\n                  <p> Are you sure you want to delete <span className=\"font-weight-bold\">  {business.name} </span> ? </p>\n                  <button type=\"subimt\"  className=\"btn btn-primary btn-block\" > Delete </button>\n              </form>\n          </Modal.Body>\n      </Modal>\n\n      <Modal \n        show={showReview} \n        size=\"lg\"\n        onHide={ () => setShowReview(false) }\n      >\n        <Modal.Header closeButton>\n          <Modal.Title> Product Reviews </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          { \n              <table class=\"table\">\n              <thead class=\" text-primary\">\n                <th> Rating </th>\n                <th> Review </th>\n                <th> Delete </th>\n              </thead>\n              <tbody>\n                {\n                  seletedProduct.reviews.map( e => \n                    <tr>\n                        <td> {e.rating} /5 </td>\n                        <td> {e.review} </td>\n                        <td onClick={() => { handleDeleteReviewProduct(e) }} > <img className=\"cursor-pointer\" src={closeImg} alt=\"\"/> </td>\n                    </tr>\n                  )\n                } \n              </tbody>\n            </table>\n          }\n        </Modal.Body>\n      </Modal>\n\n\n\n      <Modal \n        show={showReviewService} \n        size=\"lg\"\n        onHide={ () => setShowReviewService(false) }\n      >\n        <Modal.Header closeButton>\n          <Modal.Title> Product Reviews </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          { \n\n              <table class=\"table\">\n              <thead class=\" text-primary\">\n                <th> Rating </th>\n                <th> Review </th>\n                <th> Delete </th>\n              </thead>\n              <tbody>\n                {\n                  seletedService.reviews.map( e => \n                    <tr>\n                        <td> {e.rating} /5 </td>\n                        <td> {e.review} </td>\n                        <td onClick={() => { handleDeleteReviewService(e) }} > <img className=\"cursor-pointer\" src={closeImg} alt=\"\"/> </td>\n                    </tr>\n                  )\n                } \n              </tbody>\n            </table>\n          }\n        </Modal.Body>\n      </Modal>\n\n\n\n      <Modal\n        size=\"md\"\n        show={showEditProduct}\n        onHide={() => setShowEditProdust(false)}\n        aria-labelledby=\"example-modal-sizes-title-sm\"\n        >\n            <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\n                Edit Product\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleEditProduct} >\n                    <input type=\"text\" required class=\"form-control mb-3\"  value={seletedProduct.name} onChange={ e => setSelectedProduct({ ...seletedProduct, name: e.target.value }) } />\n                    <input type=\"text\" required class=\"form-control mb-3\"  value={seletedProduct.description} onChange={ e => setSelectedProduct({ ...seletedProduct, description: e.target.value }) }  />\n                    <button \n                      type=\"subimt\" \n                      disabled={ seletedProduct.name.length < 1 || seletedProduct.description.length < 1  }  \n                      className=\"btn btn-primary btn-block\" \n                    > \n                      Edit \n                    </button>\n                </form>\n            </Modal.Body>\n        </Modal>\n\n        <Modal\n            size=\"md\"\n            show={showDeleteProduct}\n            onHide={() => setShowDeleteProdust(false)}\n            aria-labelledby=\"example-modal-sizes-title-sm\"\n        >\n            <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\n                Delete Product\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleDeleteProduct} >\n                    <p> Are you sure you want to delete <span className=\"font-weight-bold\"> { seletedProduct.name } </span> ? </p>\n                      <button type=\"subimt\"  className=\"btn btn-primary btn-block\" > Delete </button>\n                </form> \n            </Modal.Body>\n        </Modal>\n\n\n        <Modal\n        size=\"md\"\n        show={showEditService}\n        onHide={() => setShowEditService(false)}\n        aria-labelledby=\"example-modal-sizes-title-sm\"\n        >\n            <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\n                Edit Service\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleEditService} >\n                    <input type=\"text\" required class=\"form-control mb-3\"  value={seletedService.name} onChange={ e => setSelectedService({ ...seletedService, name: e.target.value }) } />\n                    <input type=\"text\" required class=\"form-control mb-3\"  value={seletedService.description} onChange={ e => setSelectedService({ ...seletedService, description: e.target.value }) }  />\n                    <button \n                      type=\"subimt\" \n                      disabled={ seletedService.name.length < 1 || seletedService.description.length < 1  }  \n                      className=\"btn btn-primary btn-block\" \n                    > \n                      Edit \n                    </button>\n                </form>\n            </Modal.Body>\n        </Modal>\n\n        <Modal\n            size=\"md\"\n            show={showDeleteService}\n            onHide={() => setShowDeleteService(false)}\n            aria-labelledby=\"example-modal-sizes-title-sm\"\n        >\n            <Modal.Header closeButton>\n            <Modal.Title id=\"example-modal-sizes-title-sm\">\n                Delete Service\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <form onSubmit={handleDeleteService} > */}\n                    <p> Are you sure you want to delete <span className=\"font-weight-bold\"> { seletedService.name } </span> ? </p>\n                    <button type=\"subimt\"  className=\"btn btn-primary btn-block\" > Delete </button>\n                </form> \n            </Modal.Body>\n        </Modal>\n\n    </div>\n  );\n}\n\nexport default ViewBusiness;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/showError.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/components/Footer.jsx",["259","260"],"import React from \"react\";\n\n\nfunction Footer() {\n  return (\n      <footer class=\"footer\">\n        <div class=\"container-fluid\">\n          <nav class=\"float-left\">\n            <ul>\n              <li>\n                <a href=\"\">\n                  About Us\n                </a>\n              </li>\n              <li>\n                <a href=\"\">\n                  Crowdlys\n                </a>\n              </li>\n              <li>\n                <a href=\"https://www.creative-tim.com/license\">\n                  Licenses\n                </a>\n              </li>\n            </ul>\n          </nav>\n          <div class=\"copyright float-right\">\n            &copy;\n                 powered by {\" \"}\n            <span className=\"text-success\" >AngryNerds.</span>\n          </div>\n        </div>\n      </footer>\n  );\n}\n\nexport default Footer;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/components/Nav.jsx",["261","262","263","264","265","266"],"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {DropdownButton, Dropdown } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\"; \nimport { heroku_path } from \"./../path\";\nimport { useToasts } from 'react-toast-notifications';\n\nimport { logoutUser } from \"./../actions/users\"\n\nfunction ViewCategory() {\n  const name = useSelector(state => state.user.user.name);\n  const email = useSelector(state => state.user.user.email);\n  const role = useSelector(state => state.user.user.role);\n  const token = useSelector(state => state.token);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { addToast } = useToasts();\n\n  \n  const printRole = () => {\n    if ( role === 3  ){\n      return <span className=\"font-weight-bold\">SuperAdmin</span>\n    }else if( role === 2 ){\n      return <span className=\"font-weight-bold\">Admin</span>\n    }else{\n      return <span className=\"font-weight-bold\">Admin</span>\n    }\n  }\n\n  const handleLogout = () => {\n    dispatch(logoutUser());\n\n    localStorage.removeItem(\"token\");\n    addToast('Logout Success', { appearance: 'error' })\n    history.push(\"/login\");\n\n  }\n  \n\n  return ( \n      <nav class=\"navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top \">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-wrapper\">\n            <span class=\"navbar-brand\" >\n              Crowdly Admin Panel\n            </span>\n          </div>\n          <div class=\"collapse navbar-collapse justify-content-end\">\n            <ul class=\"navbar-nav\">\n              <li>{ printRole()  }</li>\n              <li class=\"nav-item dropdown\">\n\n                    <Dropdown>\n                      <Dropdown.Toggle>\n                      <i class=\"material-icons\">person</i>\n                      </Dropdown.Toggle>\n\n                      <Dropdown.Menu>\n                        <Dropdown.Item onClick={ handleLogout } >Logout</Dropdown.Item>\n                      </Dropdown.Menu>\n                    </Dropdown>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n  );\n}\n\nexport default ViewCategory;\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/users.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/modals.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/loading.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/actions/loading.js",["267"],"import axios from \"axios\";\n\nexport const setLoading = (data) => async (dispatch) => {\n  dispatch({\n    type: \"SET_LOADING\",\n    payload: {\n      loading: data,\n    },\n  });\n};  \n\n  ","/media/raza/asd/BCSE/fyp/admin-frontend/src/actions/users.js",["268"],"import axios from \"axios\";\n\n\nexport const customLogin = (data) => async (dispatch) => {\n  let url = `http://localhost:5000/api/admin/login`;\n  const user = await axios.post(url, data).catch((err) => {\n    return { error: err.response };\n  });\n\n  if (user.error) return user;\n\n  dispatch({\n    type: \"SET_USER\",\n    payload: { user: user.data.admin },\n  });\n\n  dispatch({\n    type: \"SET_ISLOGGED\",\n    payload: { isLoggedIn: true },\n  });\n\n  dispatch({\n    type: \"SET_TOKEN\",\n    payload: { token: user.data.token },\n  });\n  localStorage.setItem(\"token\", user.data.token);\n\n  dispatch({\n    type: \"SET_REFRESH_TOKEN\", \n    payload: { refreshToken: user.data.refreshToken },\n  });\n  localStorage.setItem(\"refreshToken\", user.data.refreshToken);\n \n  return user;\n \n};  \n \nexport const getUser = (response) => async (dispatch) => {\n  let url = `http://localhost:5000/api/admin/`;\n  const config = { headers: { \"x-auth-token\": localStorage.getItem(\"token\") } };\n  const user = await axios.get(url, config).catch((err) => {\n    // refresh token logic\n    if( err.response.data.message === \"jwt expired\" && err.response.data.status === 401  ){\n        let urlRefreshToken = `http://localhost:5000/api/users/refresh-token`;\n        const config = {\n          headers: { \"x-auth-token\": localStorage.getItem(\"refreshToken\") },\n        };\n        axios\n          .get(urlRefreshToken, config)\n          .then( res => {\n            localStorage.removeItem(\"token\");\n            localStorage.removeItem(\"tempToken\");\n            localStorage.setItem(\"token\", res.data.token);\n            localStorage.setItem(\"refreshToken\", res.data.refreshToken);\n            getUser();\n          })\n          .catch((err) => console.log(err));\n    }\n     \n  }); \n\n\n  if (user != undefined) {\n    dispatch({\n      type: \"SET_USER\",\n      payload: { user: user.data.admin },\n    });\n\n    dispatch({\n      type: \"SET_ISLOGGED\",\n      payload: { isLoggedIn: true },\n    });\n\n    dispatch({\n      type: \"SET_TOKEN\",\n      payload: { token: localStorage.getItem(\"token\") },\n    });\n  } else {\n    dispatch({\n      type: \"SET_USER\",\n      payload: { user: {} },\n    });\n\n    dispatch({\n      type: \"SET_ISLOGGED\",\n      payload: { isLoggedIn: false },\n    });\n\n    dispatch({\n      type: \"SET_TOKEN\",\n      payload: { token: \"\" },\n    });\n  }\n};\n\nexport const logoutUser = (response) => async (dispatch) => {\n  dispatch({\n    type: \"SET_USER\",\n    payload: { user: {} },\n  });\n\n  dispatch({\n    type: \"SET_ISLOGGED\",\n    payload: { isLoggedIn: false },\n  });\n\n  dispatch({\n    type: \"SET_TOKEN\",\n    payload: { token: \"\" },\n  });\n\n  localStorage.removeItem(\"token\");\n};\n","/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/dashboard.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/actions/dashboard.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/categories.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/actions/categories.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/reducers/locations.js",[],"/media/raza/asd/BCSE/fyp/admin-frontend/src/actions/locations.js",[],{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":21,"column":10,"nodeType":"275","messageId":"276","endLine":21,"endColumn":21},{"ruleId":"273","severity":1,"message":"277","line":23,"column":8,"nodeType":"275","messageId":"276","endLine":23,"endColumn":21},{"ruleId":"273","severity":1,"message":"278","line":25,"column":10,"nodeType":"275","messageId":"276","endLine":25,"endColumn":20},{"ruleId":"273","severity":1,"message":"279","line":27,"column":8,"nodeType":"275","messageId":"276","endLine":27,"endColumn":13},{"ruleId":"273","severity":1,"message":"280","line":36,"column":11,"nodeType":"275","messageId":"276","endLine":36,"endColumn":19},{"ruleId":"281","severity":1,"message":"282","line":42,"column":6,"nodeType":"283","endLine":42,"endColumn":8,"suggestions":"284"},{"ruleId":"273","severity":1,"message":"285","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":26},{"ruleId":"273","severity":1,"message":"286","line":2,"column":23,"nodeType":"275","messageId":"276","endLine":2,"endColumn":34},{"ruleId":"287","severity":1,"message":"288","line":9,"column":3,"nodeType":"289","messageId":"290","endLine":11,"endColumn":4},{"ruleId":"281","severity":1,"message":"291","line":50,"column":7,"nodeType":"283","endLine":50,"endColumn":9,"suggestions":"292"},{"ruleId":"293","severity":1,"message":"294","line":96,"column":39,"nodeType":"295","messageId":"296","endLine":96,"endColumn":41},{"ruleId":"293","severity":1,"message":"297","line":97,"column":62,"nodeType":"295","messageId":"296","endLine":97,"endColumn":64},{"ruleId":"273","severity":1,"message":"279","line":6,"column":8,"nodeType":"275","messageId":"276","endLine":6,"endColumn":13},{"ruleId":"273","severity":1,"message":"274","line":7,"column":10,"nodeType":"275","messageId":"276","endLine":7,"endColumn":21},{"ruleId":"273","severity":1,"message":"298","line":8,"column":10,"nodeType":"275","messageId":"276","endLine":8,"endColumn":19},{"ruleId":"273","severity":1,"message":"299","line":10,"column":10,"nodeType":"275","messageId":"276","endLine":10,"endColumn":16},{"ruleId":"281","severity":1,"message":"282","line":20,"column":5,"nodeType":"283","endLine":20,"endColumn":7,"suggestions":"300"},{"ruleId":"273","severity":1,"message":"301","line":22,"column":9,"nodeType":"275","messageId":"276","endLine":22,"endColumn":18},{"ruleId":"302","severity":1,"message":"303","line":57,"column":21,"nodeType":"304","endLine":57,"endColumn":44},{"ruleId":"305","severity":1,"message":"306","line":57,"column":29,"nodeType":"307","messageId":"308","endLine":57,"endColumn":43},{"ruleId":"273","severity":1,"message":"309","line":7,"column":9,"nodeType":"275","messageId":"276","endLine":7,"endColumn":14},{"ruleId":"273","severity":1,"message":"299","line":15,"column":9,"nodeType":"275","messageId":"276","endLine":15,"endColumn":15},{"ruleId":"281","severity":1,"message":"282","line":28,"column":7,"nodeType":"283","endLine":28,"endColumn":9,"suggestions":"310"},{"ruleId":"273","severity":1,"message":"311","line":162,"column":11,"nodeType":"275","messageId":"276","endLine":162,"endColumn":31},{"ruleId":"273","severity":1,"message":"312","line":18,"column":27,"nodeType":"275","messageId":"276","endLine":18,"endColumn":42},{"ruleId":"273","severity":1,"message":"309","line":5,"column":9,"nodeType":"275","messageId":"276","endLine":5,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":8,"column":10,"nodeType":"275","messageId":"276","endLine":8,"endColumn":21},{"ruleId":"273","severity":1,"message":"313","line":18,"column":10,"nodeType":"275","messageId":"276","endLine":18,"endColumn":22},{"ruleId":"273","severity":1,"message":"314","line":18,"column":24,"nodeType":"275","messageId":"276","endLine":18,"endColumn":39},{"ruleId":"273","severity":1,"message":"315","line":19,"column":10,"nodeType":"275","messageId":"276","endLine":19,"endColumn":22},{"ruleId":"273","severity":1,"message":"316","line":19,"column":24,"nodeType":"275","messageId":"276","endLine":19,"endColumn":39},{"ruleId":"273","severity":1,"message":"317","line":20,"column":10,"nodeType":"275","messageId":"276","endLine":20,"endColumn":16},{"ruleId":"273","severity":1,"message":"318","line":20,"column":18,"nodeType":"275","messageId":"276","endLine":20,"endColumn":27},{"ruleId":"273","severity":1,"message":"319","line":23,"column":11,"nodeType":"275","messageId":"276","endLine":23,"endColumn":22},{"ruleId":"273","severity":1,"message":"320","line":23,"column":24,"nodeType":"275","messageId":"276","endLine":23,"endColumn":38},{"ruleId":"273","severity":1,"message":"321","line":24,"column":24,"nodeType":"275","messageId":"276","endLine":24,"endColumn":38},{"ruleId":"273","severity":1,"message":"322","line":25,"column":11,"nodeType":"275","messageId":"276","endLine":25,"endColumn":26},{"ruleId":"273","severity":1,"message":"323","line":25,"column":28,"nodeType":"275","messageId":"276","endLine":25,"endColumn":46},{"ruleId":"281","severity":1,"message":"282","line":33,"column":5,"nodeType":"283","endLine":33,"endColumn":7,"suggestions":"324"},{"ruleId":"273","severity":1,"message":"325","line":2,"column":8,"nodeType":"275","messageId":"276","endLine":2,"endColumn":18},{"ruleId":"273","severity":1,"message":"279","line":3,"column":8,"nodeType":"275","messageId":"276","endLine":3,"endColumn":13},{"ruleId":"273","severity":1,"message":"326","line":5,"column":10,"nodeType":"275","messageId":"276","endLine":5,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":7,"column":10,"nodeType":"275","messageId":"276","endLine":7,"endColumn":21},{"ruleId":"273","severity":1,"message":"327","line":17,"column":22,"nodeType":"275","messageId":"276","endLine":17,"endColumn":32},{"ruleId":"273","severity":1,"message":"328","line":19,"column":11,"nodeType":"275","messageId":"276","endLine":19,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":48,"column":9,"nodeType":"304","endLine":48,"endColumn":48},{"ruleId":"331","severity":1,"message":"332","line":50,"column":199,"nodeType":"333","endLine":50,"endColumn":207},{"ruleId":"331","severity":1,"message":"332","line":52,"column":208,"nodeType":"333","endLine":52,"endColumn":216},{"ruleId":"273","severity":1,"message":"309","line":4,"column":9,"nodeType":"275","messageId":"276","endLine":4,"endColumn":14},{"ruleId":"281","severity":1,"message":"334","line":32,"column":5,"nodeType":"283","endLine":32,"endColumn":7,"suggestions":"335"},{"ruleId":"273","severity":1,"message":"309","line":5,"column":9,"nodeType":"275","messageId":"276","endLine":5,"endColumn":14},{"ruleId":"273","severity":1,"message":"336","line":12,"column":8,"nodeType":"275","messageId":"276","endLine":12,"endColumn":16},{"ruleId":"273","severity":1,"message":"299","line":14,"column":9,"nodeType":"275","messageId":"276","endLine":14,"endColumn":15},{"ruleId":"273","severity":1,"message":"337","line":24,"column":13,"nodeType":"275","messageId":"276","endLine":24,"endColumn":25},{"ruleId":"273","severity":1,"message":"338","line":25,"column":13,"nodeType":"275","messageId":"276","endLine":25,"endColumn":26},{"ruleId":"281","severity":1,"message":"291","line":54,"column":7,"nodeType":"283","endLine":54,"endColumn":9,"suggestions":"339"},{"ruleId":"340","severity":1,"message":"341","line":157,"column":38,"nodeType":"304","endLine":157,"endColumn":161},{"ruleId":"340","severity":1,"message":"341","line":197,"column":38,"nodeType":"304","endLine":197,"endColumn":160},{"ruleId":"273","severity":1,"message":"342","line":4,"column":22,"nodeType":"275","messageId":"276","endLine":4,"endColumn":28},{"ruleId":"273","severity":1,"message":"343","line":4,"column":30,"nodeType":"275","messageId":"276","endLine":4,"endColumn":35},{"ruleId":"281","severity":1,"message":"344","line":50,"column":5,"nodeType":"283","endLine":50,"endColumn":7,"suggestions":"345"},{"ruleId":"293","severity":1,"message":"294","line":89,"column":35,"nodeType":"295","messageId":"296","endLine":89,"endColumn":37},{"ruleId":"302","severity":1,"message":"303","line":203,"column":19,"nodeType":"304","endLine":203,"endColumn":42},{"ruleId":"305","severity":1,"message":"306","line":203,"column":27,"nodeType":"307","messageId":"308","endLine":203,"endColumn":41},{"ruleId":"340","severity":1,"message":"341","line":204,"column":21,"nodeType":"304","endLine":204,"endColumn":54},{"ruleId":"273","severity":1,"message":"309","line":4,"column":9,"nodeType":"275","messageId":"276","endLine":4,"endColumn":14},{"ruleId":"273","severity":1,"message":"279","line":5,"column":8,"nodeType":"275","messageId":"276","endLine":5,"endColumn":13},{"ruleId":"273","severity":1,"message":"274","line":9,"column":10,"nodeType":"275","messageId":"276","endLine":9,"endColumn":21},{"ruleId":"273","severity":1,"message":"299","line":11,"column":9,"nodeType":"275","messageId":"276","endLine":11,"endColumn":15},{"ruleId":"273","severity":1,"message":"280","line":15,"column":11,"nodeType":"275","messageId":"276","endLine":15,"endColumn":19},{"ruleId":"273","severity":1,"message":"346","line":16,"column":9,"nodeType":"275","messageId":"276","endLine":16,"endColumn":17},{"ruleId":"273","severity":1,"message":"347","line":18,"column":9,"nodeType":"275","messageId":"276","endLine":18,"endColumn":14},{"ruleId":"281","severity":1,"message":"348","line":46,"column":5,"nodeType":"283","endLine":46,"endColumn":7,"suggestions":"349"},{"ruleId":"293","severity":1,"message":"294","line":81,"column":35,"nodeType":"295","messageId":"296","endLine":81,"endColumn":37},{"ruleId":"302","severity":1,"message":"303","line":200,"column":19,"nodeType":"304","endLine":200,"endColumn":42},{"ruleId":"305","severity":1,"message":"306","line":200,"column":27,"nodeType":"307","messageId":"308","endLine":200,"endColumn":41},{"ruleId":"340","severity":1,"message":"341","line":201,"column":21,"nodeType":"304","endLine":201,"endColumn":146},{"ruleId":"281","severity":1,"message":"348","line":42,"column":5,"nodeType":"283","endLine":42,"endColumn":7,"suggestions":"350"},{"ruleId":"293","severity":1,"message":"294","line":77,"column":35,"nodeType":"295","messageId":"296","endLine":77,"endColumn":37},{"ruleId":"302","severity":1,"message":"303","line":184,"column":19,"nodeType":"304","endLine":184,"endColumn":42},{"ruleId":"305","severity":1,"message":"306","line":184,"column":27,"nodeType":"307","messageId":"308","endLine":184,"endColumn":41},{"ruleId":"340","severity":1,"message":"341","line":185,"column":21,"nodeType":"304","endLine":185,"endColumn":146},{"ruleId":"273","severity":1,"message":"351","line":1,"column":17,"nodeType":"275","messageId":"276","endLine":1,"endColumn":25},{"ruleId":"273","severity":1,"message":"352","line":12,"column":10,"nodeType":"275","messageId":"276","endLine":12,"endColumn":14},{"ruleId":"273","severity":1,"message":"353","line":16,"column":8,"nodeType":"275","messageId":"276","endLine":16,"endColumn":15},{"ruleId":"273","severity":1,"message":"354","line":21,"column":11,"nodeType":"275","messageId":"276","endLine":21,"endColumn":15},{"ruleId":"273","severity":1,"message":"355","line":21,"column":17,"nodeType":"275","messageId":"276","endLine":21,"endColumn":24},{"ruleId":"273","severity":1,"message":"356","line":36,"column":11,"nodeType":"275","messageId":"276","endLine":36,"endColumn":31},{"ruleId":"273","severity":1,"message":"357","line":36,"column":33,"nodeType":"275","messageId":"276","endLine":36,"endColumn":57},{"ruleId":"273","severity":1,"message":"358","line":37,"column":11,"nodeType":"275","messageId":"276","endLine":37,"endColumn":31},{"ruleId":"273","severity":1,"message":"359","line":37,"column":33,"nodeType":"275","messageId":"276","endLine":37,"endColumn":57},{"ruleId":"281","severity":1,"message":"360","line":81,"column":5,"nodeType":"283","endLine":81,"endColumn":7,"suggestions":"361"},{"ruleId":"293","severity":1,"message":"294","line":108,"column":35,"nodeType":"295","messageId":"296","endLine":108,"endColumn":37},{"ruleId":"273","severity":1,"message":"362","line":242,"column":9,"nodeType":"275","messageId":"276","endLine":242,"endColumn":26},{"ruleId":"273","severity":1,"message":"363","line":249,"column":9,"nodeType":"275","messageId":"276","endLine":249,"endColumn":22},{"ruleId":"302","severity":1,"message":"303","line":11,"column":17,"nodeType":"304","endLine":11,"endColumn":28},{"ruleId":"302","severity":1,"message":"303","line":16,"column":17,"nodeType":"304","endLine":16,"endColumn":28},{"ruleId":"273","severity":1,"message":"364","line":3,"column":9,"nodeType":"275","messageId":"276","endLine":3,"endColumn":23},{"ruleId":"273","severity":1,"message":"279","line":4,"column":8,"nodeType":"275","messageId":"276","endLine":4,"endColumn":13},{"ruleId":"273","severity":1,"message":"274","line":6,"column":10,"nodeType":"275","messageId":"276","endLine":6,"endColumn":21},{"ruleId":"273","severity":1,"message":"365","line":12,"column":9,"nodeType":"275","messageId":"276","endLine":12,"endColumn":13},{"ruleId":"273","severity":1,"message":"366","line":13,"column":9,"nodeType":"275","messageId":"276","endLine":13,"endColumn":14},{"ruleId":"273","severity":1,"message":"347","line":15,"column":9,"nodeType":"275","messageId":"276","endLine":15,"endColumn":14},{"ruleId":"273","severity":1,"message":"279","line":1,"column":8,"nodeType":"275","messageId":"276","endLine":1,"endColumn":13},{"ruleId":"293","severity":1,"message":"297","line":63,"column":12,"nodeType":"295","messageId":"296","endLine":63,"endColumn":14},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"no-unused-vars","'heroku_path' is defined but never used.","Identifier","unusedVar","'ProctedRoutes' is defined but never used.","'useHistory' is defined but never used.","'axios' is defined but never used.","'addToast' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["369"],"'Component' is defined but never used.","'useDispatch' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook React.useEffect has missing dependencies: 'addToast' and 'token'. Either include them or remove the dependency array.",["370"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useToasts' is defined but never used.","'Ripple' is defined but never used.",["371"],"'printRole' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'Modal' is defined but never used.",["372"],"'handleDeleteCategory' is assigned a value but never used.","'setloadingAdmin' is assigned a value but never used.","'selectedArea' is assigned a value but never used.","'setSelectedArea' is assigned a value but never used.","'smShowDelete' is assigned a value but never used.","'setSmShowDelete' is assigned a value but never used.","'smShow' is assigned a value but never used.","'setSmShow' is assigned a value but never used.","'loadingCity' is assigned a value but never used.","'setLoadingCity' is assigned a value but never used.","'setLoadingArea' is assigned a value but never used.","'loadingCityDrop' is assigned a value but never used.","'setLoadingCityDrop' is assigned a value but never used.",["373"],"'SidebarImg' is defined but never used.","'Redirect' is defined but never used.","'setloading' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook React.useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["374"],"'closeImg' is defined but never used.","'loadingUsers' is assigned a value but never used.","'loadingBusers' is assigned a value but never used.",["375"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Switch' is defined but never used.","'Route' is defined but never used.","React Hook React.useEffect has missing dependencies: 'addToast', 'admin_id', and 'token'. Either include them or remove the dependency array.",["376"],"'dispatch' is assigned a value but never used.","'token' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'token' and 'user_id'. Either include them or remove the dependency array.",["377"],["378"],"'useState' is defined but never used.","'Link' is defined but never used.","'userImg' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'seletedReviewProduct' is assigned a value but never used.","'setSelectedReviewProduct' is assigned a value but never used.","'seletedReviewService' is assigned a value but never used.","'setSelectedReviewService' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'business_id' and 'token'. Either include them or remove the dependency array.",["379"],"'printUserBusiness' is assigned a value but never used.","'printUserType' is assigned a value but never used.","'DropdownButton' is defined but never used.","'name' is assigned a value but never used.","'email' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"380","fix":"381"},{"desc":"382","fix":"383"},{"desc":"380","fix":"384"},{"desc":"380","fix":"385"},{"desc":"380","fix":"386"},{"desc":"387","fix":"388"},{"desc":"382","fix":"389"},{"desc":"390","fix":"391"},{"desc":"392","fix":"393"},{"desc":"392","fix":"394"},{"desc":"395","fix":"396"},"Update the dependencies array to be: [dispatch]",{"range":"397","text":"398"},"Update the dependencies array to be: [addToast, token]",{"range":"399","text":"400"},{"range":"401","text":"398"},{"range":"402","text":"398"},{"range":"403","text":"398"},"Update the dependencies array to be: [token]",{"range":"404","text":"405"},{"range":"406","text":"400"},"Update the dependencies array to be: [addToast, admin_id, token]",{"range":"407","text":"408"},"Update the dependencies array to be: [token, user_id]",{"range":"409","text":"410"},{"range":"411","text":"410"},"Update the dependencies array to be: [business_id, token]",{"range":"412","text":"413"},[1549,1551],"[dispatch]",[2023,2025],"[addToast, token]",[634,636],[860,862],[1208,1210],[939,941],"[token]",[1772,1774],[1969,1971],"[addToast, admin_id, token]",[1428,1430],"[token, user_id]",[1284,1286],[3011,3013],"[business_id, token]"]